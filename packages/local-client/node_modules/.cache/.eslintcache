[{"/Users/tristanwhite/IdeaProjects/jbook/src/index.tsx":"1","/Users/tristanwhite/IdeaProjects/jbook/src/components/code-editor.tsx":"2","/Users/tristanwhite/IdeaProjects/jbook/src/components/preview.tsx":"3","/Users/tristanwhite/IdeaProjects/jbook/src/bundler/index.ts":"4","/Users/tristanwhite/IdeaProjects/jbook/src/components/code-cell.tsx":"5","/Users/tristanwhite/IdeaProjects/jbook/src/bundler/plugins/unpkg-path-plugins.ts":"6","/Users/tristanwhite/IdeaProjects/jbook/src/bundler/plugins/fetch-plugin.ts":"7","/Users/tristanwhite/IdeaProjects/jbook/src/components/resizable.tsx":"8","/Users/tristanwhite/IdeaProjects/jbook/src/components/text-editor.tsx":"9","/Users/tristanwhite/IdeaProjects/jbook/src/state/store.ts":"10","/Users/tristanwhite/IdeaProjects/jbook/src/state/reducers/index.ts":"11","/Users/tristanwhite/IdeaProjects/jbook/src/state/reducers/cellsReducer.ts":"12","/Users/tristanwhite/IdeaProjects/jbook/src/state/action-types/index.ts":"13","/Users/tristanwhite/IdeaProjects/jbook/src/state/index.ts":"14","/Users/tristanwhite/IdeaProjects/jbook/src/state/cell.ts":"15","/Users/tristanwhite/IdeaProjects/jbook/src/state/action-creators/index.ts":"16","/Users/tristanwhite/IdeaProjects/jbook/src/components/cell-list.tsx":"17","/Users/tristanwhite/IdeaProjects/jbook/src/hooks/use-typed-selector.ts":"18","/Users/tristanwhite/IdeaProjects/jbook/src/components/cell-list-item.tsx":"19","/Users/tristanwhite/IdeaProjects/jbook/src/hooks/use-actions.ts":"20","/Users/tristanwhite/IdeaProjects/jbook/src/components/action-bar.tsx":"21","/Users/tristanwhite/IdeaProjects/jbook/src/components/add-cell.tsx":"22"},{"size":529,"mtime":1625252098029,"results":"23","hashOfConfig":"24"},{"size":2063,"mtime":1625161728326,"results":"25","hashOfConfig":"24"},{"size":1778,"mtime":1625161221746,"results":"26","hashOfConfig":"24"},{"size":994,"mtime":1623089034818,"results":"27","hashOfConfig":"24"},{"size":1385,"mtime":1625161230763,"results":"28","hashOfConfig":"24"},{"size":974,"mtime":1622325916560,"results":"29","hashOfConfig":"24"},{"size":2506,"mtime":1622326424349,"results":"30","hashOfConfig":"24"},{"size":2001,"mtime":1623017306684,"results":"31","hashOfConfig":"24"},{"size":1608,"mtime":1625086189130,"results":"32","hashOfConfig":"24"},{"size":481,"mtime":1625684936679,"results":"33","hashOfConfig":"24"},{"size":227,"mtime":1624383668084,"results":"34","hashOfConfig":"24"},{"size":2196,"mtime":1625250847374,"results":"35","hashOfConfig":"24"},{"size":169,"mtime":1623271247308,"results":"36","hashOfConfig":"24"},{"size":130,"mtime":1625161122238,"results":"37","hashOfConfig":"24"},{"size":124,"mtime":1624042718196,"results":"38","hashOfConfig":"24"},{"size":937,"mtime":1625256251468,"results":"39","hashOfConfig":"24"},{"size":794,"mtime":1625686011266,"results":"40","hashOfConfig":"24"},{"size":179,"mtime":1625077862303,"results":"41","hashOfConfig":"24"},{"size":973,"mtime":1625255041812,"results":"42","hashOfConfig":"24"},{"size":294,"mtime":1625251090473,"results":"43","hashOfConfig":"24"},{"size":1359,"mtime":1625253136814,"results":"44","hashOfConfig":"24"},{"size":1159,"mtime":1625684765771,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"19jz0n7",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/Users/tristanwhite/IdeaProjects/jbook/src/index.tsx",[],["93","94"],"/Users/tristanwhite/IdeaProjects/jbook/src/components/code-editor.tsx",[],"/Users/tristanwhite/IdeaProjects/jbook/src/components/preview.tsx",[],"/Users/tristanwhite/IdeaProjects/jbook/src/bundler/index.ts",[],"/Users/tristanwhite/IdeaProjects/jbook/src/components/code-cell.tsx",[],"/Users/tristanwhite/IdeaProjects/jbook/src/bundler/plugins/unpkg-path-plugins.ts",[],"/Users/tristanwhite/IdeaProjects/jbook/src/bundler/plugins/fetch-plugin.ts",[],"/Users/tristanwhite/IdeaProjects/jbook/src/components/resizable.tsx",[],"/Users/tristanwhite/IdeaProjects/jbook/src/components/text-editor.tsx",[],"/Users/tristanwhite/IdeaProjects/jbook/src/state/store.ts",[],"/Users/tristanwhite/IdeaProjects/jbook/src/state/reducers/index.ts",[],"/Users/tristanwhite/IdeaProjects/jbook/src/state/reducers/cellsReducer.ts",["95","96"],"import produce from \"immer\";\nimport { ActionType } from '../action-types';\nimport { Action } from '../actions';\nimport { Cell } from '../cell';\nimport {stat} from \"fs\";\n\ninterface CellsState {\n    loading: boolean;\n    error: string | null;\n    order: string[];\n    data: {\n        [key: string]: Cell;\n    };\n}\n\nconst initialState: CellsState = {\n    loading: false,\n    error: null,\n    order: [],\n    data: {},\n};\n\nconst reducer = produce((\n    state: CellsState = initialState,\n    action: Action\n    ) => {\n        switch (action.type) {\n            case ActionType.UPDATE_CELL:\n                const { id, content } = action.payload;\n                state.data[id].content = content;\n                return state;\n\n            case ActionType.DELETE_CELL:\n                delete state.data[action.payload];\n                state.order = state.order.filter(id => id !== action.payload);\n                return state;\n\n            case ActionType.MOVE_CELL:\n                const {direction} = action.payload;\n                const index = state.order.findIndex((id) => id === action.payload.id);\n                const targetIndex = direction === 'up' ? index - 1 : index + 1;\n\n                if(targetIndex < 0 || targetIndex > state.order.length-1) {\n                    return state;\n                }\n                state.order[index] = state.order[targetIndex];\n                state.order[targetIndex] = action.payload.id;\n                return state;\n\n            case ActionType.INSERT_CELL_BEFORE:\n                const cell: Cell = {\n                    content: '',\n                    type: action.payload.type,\n                    id: ''\n                }\n                state.data[cell.id] = cell;\n                const foundIndex = state.order.findIndex(id => id === action.payload.id)\n                if (foundIndex < 0) {\n                    state.order.push(cell.id)\n                } else {\n                    state.order.splice(foundIndex, 0, cell.id);\n                }\n                return state;\n\n            default:\n                return state;\n    }\n});\n\nconst randomId = () => {\n    return Math.random().toString(36).substr(2,5);\n}\n\nexport default reducer;\n","/Users/tristanwhite/IdeaProjects/jbook/src/state/action-types/index.ts",[],"/Users/tristanwhite/IdeaProjects/jbook/src/state/index.ts",[],"/Users/tristanwhite/IdeaProjects/jbook/src/state/cell.ts",[],"/Users/tristanwhite/IdeaProjects/jbook/src/state/action-creators/index.ts",["97"],"import { ActionType } from '../action-types';\nimport {\n  Action,\n  UpdateCellAction,\n  DeleteCellAction,\n  MoveCellAction,\n  InsertCellBeforeAction,\n  Direction,\n} from '../actions';\nimport { CellTypes } from '../cell';\n\nexport const updateCell = (id: string, content: string): UpdateCellAction => {\n  return {\n    type: ActionType.UPDATE_CELL,\n    payload: {\n      id,\n      content,\n    },\n  };\n};\n\nexport const deleteCell = (id: string): DeleteCellAction => {\n  return {\n    type: ActionType.DELETE_CELL,\n    payload: id,\n  };\n};\n\nexport const moveCell = (id: string, direction: Direction): MoveCellAction => {\n  return {\n    type: ActionType.MOVE_CELL,\n    payload: {\n      id,\n      direction,\n    },\n  };\n};\n\nexport const insertCellBefore = (\n  id: string | null,\n  cellType: CellTypes\n): InsertCellBeforeAction => {\n  return {\n    type: ActionType.INSERT_CELL_BEFORE,\n    payload: {\n      id,\n      type: cellType,\n    },\n  };\n};\n","/Users/tristanwhite/IdeaProjects/jbook/src/components/cell-list.tsx",[],"/Users/tristanwhite/IdeaProjects/jbook/src/hooks/use-typed-selector.ts",[],"/Users/tristanwhite/IdeaProjects/jbook/src/components/cell-list-item.tsx",[],"/Users/tristanwhite/IdeaProjects/jbook/src/hooks/use-actions.ts",[],"/Users/tristanwhite/IdeaProjects/jbook/src/components/action-bar.tsx",[],"/Users/tristanwhite/IdeaProjects/jbook/src/components/add-cell.tsx",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":5,"column":9,"nodeType":"104","messageId":"105","endLine":5,"endColumn":13},{"ruleId":"102","severity":1,"message":"106","line":70,"column":7,"nodeType":"104","messageId":"105","endLine":70,"endColumn":15},{"ruleId":"102","severity":1,"message":"107","line":3,"column":3,"nodeType":"104","messageId":"105","endLine":3,"endColumn":9},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"@typescript-eslint/no-unused-vars","'stat' is defined but never used.","Identifier","unusedVar","'randomId' is assigned a value but never used.","'Action' is defined but never used.","no-global-assign","no-unsafe-negation"]