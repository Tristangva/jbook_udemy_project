{"code":"(this.webpackJsonpjbook=this.webpackJsonpjbook||[]).push([[382],{512:function(s,n){!function(s){var n=[/([\"'])(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|(?!\\1)[^\\\\`$])*\\1/.source,/<<-?\\s*([\"']?)(\\w+)\\2\\s[\\s\\S]*?[\\r\\n]\\3/.source].join(\"|\");s.languages[\"shell-session\"]={command:{pattern:RegExp(/^(?:[^\\s@:$#*!/\\\\]+@[^\\s@:$#*!/\\\\]+(?::[^\\0-\\x1F$#*?\"<>:;|]+)?)?[$#](?:[^\\\\\\r\\n'\"<]|\\\\.|<<str>>)+/.source.replace(/<<str>>/g,(function(){return n})),\"m\"),greedy:!0,inside:{info:{pattern:/^[^#$]+/,alias:\"punctuation\",inside:{path:{pattern:/(:)[\\s\\S]+/,lookbehind:!0},user:/^[^:]+/,punctuation:/:/}},bash:{pattern:/(^[$#]\\s*)\\S[\\s\\S]*/,lookbehind:!0,alias:\"language-bash\",inside:s.languages.bash},\"shell-symbol\":{pattern:/^[$#]/,alias:\"important\"}}},output:/.(?:.*(?:[\\r\\n]|.$))*/},s.languages[\"sh-session\"]=s.languages.shellsession=s.languages[\"shell-session\"]}(Prism)}}]);","name":"static/js/382.201f1b0c.chunk.js","map":{"version":3,"sources":["static/js/382.201f1b0c.chunk.js"],"names":["this","push","512","module","exports","Prism","strings","source","join","languages","command","pattern","RegExp","replace","greedy","inside","info","alias","path","lookbehind","user","punctuation","bash","shell-symbol","output"],"mappings":"CAACA,KAAwB,kBAAIA,KAAwB,mBAAK,IAAIC,KAAK,CAAC,CAAC,KAAK,CAEpEC,IACA,SAAUC,EAAQC,IAExB,SAAWC,GAGT,IAAIC,EAAU,CAEd,mEAAmEC,OAEnE,0CAA0CA,QAAQC,KAAK,KACvDH,EAAMI,UAAU,iBAAmB,CACjCC,QAAW,CACTC,QAASC,OAAO,oGAAoGL,OAAOM,QAAQ,YAAY,WAC7I,OAAOP,KACL,KACJQ,QAAQ,EACRC,OAAQ,CACNC,KAAQ,CAGNL,QAAS,UACTM,MAAO,cACPF,OAAQ,CACNG,KAAQ,CACNP,QAAS,aACTQ,YAAY,GAEdC,KAAQ,SACRC,YAAe,MAGnBC,KAAQ,CACNX,QAAS,sBACTQ,YAAY,EACZF,MAAO,gBACPF,OAAQV,EAAMI,UAAUa,MAE1BC,eAAgB,CACdZ,QAAS,QACTM,MAAO,eAIbO,OAAU,yBAEZnB,EAAMI,UAAU,cAAgBJ,EAAMI,UAAwB,aAAIJ,EAAMI,UAAU,iBA3CpF,CA4CGJ"},"input":"(this[\"webpackJsonpjbook\"] = this[\"webpackJsonpjbook\"] || []).push([[382],{\n\n/***/ 512:\n/***/ (function(module, exports) {\n\n(function (Prism) {\n  // CAREFUL!\n  // The following patterns are concatenated, so the group referenced by a back reference is non-obvious!\n  var strings = [// normal string\n  // 1 capturing group\n  /([\"'])(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|(?!\\1)[^\\\\`$])*\\1/.source, // here doc\n  // 2 capturing groups\n  /<<-?\\s*([\"']?)(\\w+)\\2\\s[\\s\\S]*?[\\r\\n]\\3/.source].join('|');\n  Prism.languages['shell-session'] = {\n    'command': {\n      pattern: RegExp(/^(?:[^\\s@:$#*!/\\\\]+@[^\\s@:$#*!/\\\\]+(?::[^\\0-\\x1F$#*?\"<>:;|]+)?)?[$#](?:[^\\\\\\r\\n'\"<]|\\\\.|<<str>>)+/.source.replace(/<<str>>/g, function () {\n        return strings;\n      }), 'm'),\n      greedy: true,\n      inside: {\n        'info': {\n          // foo@bar:~/files$ exit\n          // foo@bar$ exit\n          pattern: /^[^#$]+/,\n          alias: 'punctuation',\n          inside: {\n            'path': {\n              pattern: /(:)[\\s\\S]+/,\n              lookbehind: true\n            },\n            'user': /^[^:]+/,\n            'punctuation': /:/\n          }\n        },\n        'bash': {\n          pattern: /(^[$#]\\s*)\\S[\\s\\S]*/,\n          lookbehind: true,\n          alias: 'language-bash',\n          inside: Prism.languages.bash\n        },\n        'shell-symbol': {\n          pattern: /^[$#]/,\n          alias: 'important'\n        }\n      }\n    },\n    'output': /.(?:.*(?:[\\r\\n]|.$))*/\n  };\n  Prism.languages['sh-session'] = Prism.languages['shellsession'] = Prism.languages['shell-session'];\n})(Prism);\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/Users/tristanwhite/IdeaProjects/jbook/packages/local-client/node_modules/prismjs/components/prism-shell-session.js"],"names":["Prism","strings","source","join","languages","pattern","RegExp","replace","greedy","inside","alias","lookbehind","bash"],"mappings":";;;;;AAAC,WAAUA,KAAV,EAAiB;AAEjB;AACA;AAEA,MAAIC,OAAO,GAAG,CACb;AACA;AACA,qEAAmEC,MAHtD,EAKb;AACA;AACA,4CAA0CA,MAP7B,EAQZC,IARY,CAQP,GARO,CAAd;AAUAH,OAAK,CAACI,SAAN,CAAgB,eAAhB,IAAmC;AAClC,eAAW;AACVC,aAAO,EAAEC,MAAM,CAAC,oGAAoGJ,MAApG,CAA2GK,OAA3G,CAAmH,UAAnH,EAA+H,YAAY;AAAE,eAAON,OAAP;AAAiB,OAA9J,CAAD,EAAkK,GAAlK,CADL;AAEVO,YAAM,EAAE,IAFE;AAGVC,YAAM,EAAE;AACP,gBAAQ;AACP;AACA;AACAJ,iBAAO,EAAE,SAHF;AAIPK,eAAK,EAAE,aAJA;AAKPD,gBAAM,EAAE;AACP,oBAAQ;AACPJ,qBAAO,EAAE,YADF;AAEPM,wBAAU,EAAE;AAFL,aADD;AAKP,oBAAQ,QALD;AAMP,2BAAe;AANR;AALD,SADD;AAeP,gBAAQ;AACPN,iBAAO,EAAE,qBADF;AAEPM,oBAAU,EAAE,IAFL;AAGPD,eAAK,EAAE,eAHA;AAIPD,gBAAM,EAAET,KAAK,CAACI,SAAN,CAAgBQ;AAJjB,SAfD;AAqBP,wBAAgB;AACfP,iBAAO,EAAE,OADM;AAEfK,eAAK,EAAE;AAFQ;AArBT;AAHE,KADuB;AA+BlC,cAAU;AA/BwB,GAAnC;AAkCAV,OAAK,CAACI,SAAN,CAAgB,YAAhB,IAAgCJ,KAAK,CAACI,SAAN,CAAgB,cAAhB,IAAkCJ,KAAK,CAACI,SAAN,CAAgB,eAAhB,CAAlE;AAEA,CAnDA,EAmDCJ,KAnDD,CAAD,C","file":"x","sourcesContent":["(function (Prism) {\n\n\t// CAREFUL!\n\t// The following patterns are concatenated, so the group referenced by a back reference is non-obvious!\n\n\tvar strings = [\n\t\t// normal string\n\t\t// 1 capturing group\n\t\t/([\"'])(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|(?!\\1)[^\\\\`$])*\\1/.source,\n\n\t\t// here doc\n\t\t// 2 capturing groups\n\t\t/<<-?\\s*([\"']?)(\\w+)\\2\\s[\\s\\S]*?[\\r\\n]\\3/.source\n\t].join('|');\n\n\tPrism.languages['shell-session'] = {\n\t\t'command': {\n\t\t\tpattern: RegExp(/^(?:[^\\s@:$#*!/\\\\]+@[^\\s@:$#*!/\\\\]+(?::[^\\0-\\x1F$#*?\"<>:;|]+)?)?[$#](?:[^\\\\\\r\\n'\"<]|\\\\.|<<str>>)+/.source.replace(/<<str>>/g, function () { return strings; }), 'm'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'info': {\n\t\t\t\t\t// foo@bar:~/files$ exit\n\t\t\t\t\t// foo@bar$ exit\n\t\t\t\t\tpattern: /^[^#$]+/,\n\t\t\t\t\talias: 'punctuation',\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'path': {\n\t\t\t\t\t\t\tpattern: /(:)[\\s\\S]+/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'user': /^[^:]+/,\n\t\t\t\t\t\t'punctuation': /:/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'bash': {\n\t\t\t\t\tpattern: /(^[$#]\\s*)\\S[\\s\\S]*/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'language-bash',\n\t\t\t\t\tinside: Prism.languages.bash\n\t\t\t\t},\n\t\t\t\t'shell-symbol': {\n\t\t\t\t\tpattern: /^[$#]/,\n\t\t\t\t\talias: 'important'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'output': /.(?:.*(?:[\\r\\n]|.$))*/\n\t};\n\n\tPrism.languages['sh-session'] = Prism.languages['shellsession'] = Prism.languages['shell-session'];\n\n}(Prism));\n"]}}