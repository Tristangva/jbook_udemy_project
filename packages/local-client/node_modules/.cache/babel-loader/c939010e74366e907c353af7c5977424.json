{"ast":null,"code":"import { ActionType } from '../action-types';\nimport { saveCells } from '../action-creators';\nexport const persistMiddleware = ({\n  dispatch,\n  getState\n}) => {\n  let timer;\n  return next => {\n    return action => {\n      next(action);\n\n      if ([ActionType.MOVE_CELL, ActionType.UPDATE_CELL, ActionType.INSERT_CELL_AFTER, ActionType.DELETE_CELL].includes(action.type)) {\n        if (timer) {\n          clearTimeout(timer);\n        }\n\n        timer = setTimeout(() => {\n          saveCells()(dispatch, getState);\n        }, 250);\n      }\n    };\n  };\n};","map":{"version":3,"sources":["/Users/tristanwhite/IdeaProjects/jbook/packages/local-client/src/state/middlewares/persist-middleware.ts"],"names":["ActionType","saveCells","persistMiddleware","dispatch","getState","timer","next","action","MOVE_CELL","UPDATE_CELL","INSERT_CELL_AFTER","DELETE_CELL","includes","type","clearTimeout","setTimeout"],"mappings":"AAEA,SAAQA,UAAR,QAA0B,iBAA1B;AACA,SAAQC,SAAR,QAAyB,oBAAzB;AAGA,OAAO,MAAMC,iBAAiB,GAAG,CAC7B;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAD6B,KAGxB;AACL,MAAIC,KAAJ;AACA,SAAOC,IAAD,IAAoC;AACtC,WAAOC,MAAD,IAAoB;AACtBD,MAAAA,IAAI,CAACC,MAAD,CAAJ;;AACA,UAAI,CAACP,UAAU,CAACQ,SAAZ,EAAuBR,UAAU,CAACS,WAAlC,EACAT,UAAU,CAACU,iBADX,EAC8BV,UAAU,CAACW,WADzC,EACsDC,QADtD,CAC+DL,MAAM,CAACM,IADtE,CAAJ,EAEE;AACE,YAAGR,KAAH,EAAU;AACNS,UAAAA,YAAY,CAACT,KAAD,CAAZ;AACH;;AACDA,QAAAA,KAAK,GAAGU,UAAU,CAAC,MAAK;AACpBd,UAAAA,SAAS,GAAGE,QAAH,EAAaC,QAAb,CAAT;AACH,SAFiB,EAEf,GAFe,CAAlB;AAGH;AACJ,KAZD;AAaH,GAdD;AAeH,CApBM","sourcesContent":["import {Dispatch} from \"redux\";\nimport {Action} from \"../actions\";\nimport {ActionType } from '../action-types';\nimport {saveCells } from '../action-creators';\nimport { RootState } from '../reducers';\n\nexport const persistMiddleware = (\n    {dispatch, getState}: {\n        dispatch: Dispatch<Action>; getState: () => RootState}\n    ) => {\n    let timer: any;\n    return(next: (action: Action) => void) => {\n        return(action: Action) => {\n            next(action);\n            if ([ActionType.MOVE_CELL, ActionType.UPDATE_CELL,\n                ActionType.INSERT_CELL_AFTER, ActionType.DELETE_CELL].includes(action.type)\n            ) {\n                if(timer) {\n                    clearTimeout(timer);\n                }\n                timer = setTimeout(()=> {\n                    saveCells()(dispatch, getState);\n                }, 250);\n            }\n        };\n    };\n};\n"]},"metadata":{},"sourceType":"module"}