{"ast":null,"code":"var _jsxFileName = \"/Users/tristanwhite/Projects/jbook/packages/local-client/src/components/preview.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useRef } from \"react\";\nimport './preview.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst html = `\n    <html>\n      <head>\n        <style> html {background-color: white} </style>\n      </head>\n      <body>\n        <div id=\"root\"></div>\n        <script>\n          const handleError = (err) => {\n              const root = document.querySelector('#root');\n                  root.innerHTML = '<div style=\"color: red;\"><h4>Runtime Error</h4>' + err + '</div>';\n                  console.error(err)\n          };\n          \n          window.addEventListener('error', (event) => {\n              event.preventDefault();\n              handleError(event.error);\n          });\n          window.addEventListener('message', (event) => {\n              <!-- Error catch -->\n              try{\n                   eval(event.data);\n              }catch (err) {\n                 handleError(err);\n                  <!-- Check error optional-->\n              }\n          }, false);\n        </script>\n      </body>\n    </html>\n  `;\n\nconst Preview = ({\n  code,\n  bundlingStatus\n}) => {\n  _s();\n\n  const iframe = useRef();\n  useEffect(() => {\n    iframe.current.srcdoc = html;\n    setTimeout(() => {\n      iframe.current.contentWindow.postMessage(code, '*');\n    }, 50);\n  }, [code]);\n  console.log(bundlingStatus);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"preview-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n      title: \"preview\",\n      ref: iframe,\n      sandbox: \"allow-scripts\",\n      srcDoc: html\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), bundlingStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview-error\",\n      children: bundlingStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Preview, \"GAFleWBZ6O+8Op7dBuDH6PzOglQ=\");\n\n_c = Preview;\nexport default Preview;\n\nvar _c;\n\n$RefreshReg$(_c, \"Preview\");","map":{"version":3,"sources":["/Users/tristanwhite/Projects/jbook/packages/local-client/src/components/preview.tsx"],"names":["React","useEffect","useRef","html","Preview","code","bundlingStatus","iframe","current","srcdoc","setTimeout","contentWindow","postMessage","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,MAAnB,QAAgC,OAAhC;AACA,OAAO,eAAP;;AAOA,MAAMC,IAAI,GAAI;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GA9BA;;AAgCA,MAAMC,OAA+B,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAMC,EAAAA;AAAN,CAAD,KAA2B;AAAA;;AAC/D,QAAMC,MAAM,GAAGL,MAAM,EAArB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,MAAM,CAACC,OAAP,CAAeC,MAAf,GAAwBN,IAAxB;AACAO,IAAAA,UAAU,CAAC,MAAI;AACXH,MAAAA,MAAM,CAACC,OAAP,CAAeG,aAAf,CAA6BC,WAA7B,CAAyCP,IAAzC,EAA+C,GAA/C;AACH,KAFS,EAEP,EAFO,CAAV;AAGH,GALQ,EAKN,CAACA,IAAD,CALM,CAAT;AAOAQ,EAAAA,OAAO,CAACC,GAAR,CAAYR,cAAZ;AAEA,sBACI;AAAK,IAAA,SAAS,EAAE,iBAAhB;AAAA,4BACI;AACI,MAAA,KAAK,EAAE,SADX;AAEI,MAAA,GAAG,EAAEC,MAFT;AAGI,MAAA,OAAO,EAAC,eAHZ;AAII,MAAA,MAAM,EAAEJ;AAJZ;AAAA;AAAA;AAAA;AAAA,YADJ,EAOKG,cAAc,iBAAI;AAAK,MAAA,SAAS,EAAE,eAAhB;AAAA,gBAAkCA;AAAlC;AAAA;AAAA;AAAA;AAAA,YAPvB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAvBD;;GAAMF,O;;KAAAA,O;AAyBN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\nimport {useEffect, useRef} from \"react\";\nimport './preview.css';\n\ninterface PreviewProps{\n    code: string;\n    bundlingStatus: string;\n}\n\nconst html = `\n    <html>\n      <head>\n        <style> html {background-color: white} </style>\n      </head>\n      <body>\n        <div id=\"root\"></div>\n        <script>\n          const handleError = (err) => {\n              const root = document.querySelector('#root');\n                  root.innerHTML = '<div style=\"color: red;\"><h4>Runtime Error</h4>' + err + '</div>';\n                  console.error(err)\n          };\n          \n          window.addEventListener('error', (event) => {\n              event.preventDefault();\n              handleError(event.error);\n          });\n          window.addEventListener('message', (event) => {\n              <!-- Error catch -->\n              try{\n                   eval(event.data);\n              }catch (err) {\n                 handleError(err);\n                  <!-- Check error optional-->\n              }\n          }, false);\n        </script>\n      </body>\n    </html>\n  `;\n\nconst Preview: React.FC<PreviewProps> = ({code,bundlingStatus}) => {\n    const iframe = useRef<any>();\n\n    useEffect(() => {\n        iframe.current.srcdoc = html;\n        setTimeout(()=>{\n            iframe.current.contentWindow.postMessage(code, '*');\n        }, 50);\n    }, [code]);\n\n    console.log(bundlingStatus);\n\n    return (\n        <div className={\"preview-wrapper\"}>\n            <iframe\n                title={\"preview\"}\n                ref={iframe}\n                sandbox=\"allow-scripts\"\n                srcDoc={html}\n            />\n            {bundlingStatus && <div className={\"preview-error\"}>{bundlingStatus}</div>}\n        </div>\n    );\n}\n\nexport default Preview;\n"]},"metadata":{},"sourceType":"module"}