{"ast":null,"code":"var _jsxFileName = \"/Users/tristanwhite/IdeaProjects/jbook/src/index.tsx\",\n    _s = $RefreshSig$();\n\nimport * as esbuild from 'esbuild-wasm';\nimport { useEffect, useState, useRef } from 'react';\nimport ReactDom from 'react-dom';\nimport { unpkgPathPlugin } from \"./plugins/unpkg-path-plugins\";\nimport { fetchPlugin } from \"./plugins/fetch-plugin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const ref = useRef();\n  const [input, setInput] = useState('');\n  const [code, setCode] = useState('');\n\n  const startService = async () => {\n    ref.current = await esbuild.startService({\n      worker: true,\n      wasmURL: 'https://unpkg.com/esbuild-wasm@0.8.27/esbuild.wasm'\n    });\n  };\n\n  useEffect(() => {\n    startService();\n  }, []); //one single time\n\n  const onClick = async () => {\n    if (!ref.current) {\n      return;\n    }\n\n    const result = await ref.current.build({\n      entryPoints: ['index.js'],\n      bundle: true,\n      write: false,\n      plugins: [unpkgPathPlugin(), fetchPlugin(input)],\n      define: {\n        'process.env.NODE_ENV': 'production',\n        global: 'window'\n      }\n    }); //console.log(result.outputFiles[0].text);\n\n    setCode(result.outputFiles[0].text);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: input,\n      onChange: e => setInput(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClick,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: code\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"2LSdorL2b89vbPPoszi3LOuSc/Y=\");\n\n_c = App;\nReactDom.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 60,\n  columnNumber: 5\n}, this), document.querySelector('#root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tristanwhite/IdeaProjects/jbook/src/index.tsx"],"names":["esbuild","useEffect","useState","useRef","ReactDom","unpkgPathPlugin","fetchPlugin","App","ref","input","setInput","code","setCode","startService","current","worker","wasmURL","onClick","result","build","entryPoints","bundle","write","plugins","define","global","outputFiles","text","e","target","value","render","document","querySelector"],"mappings":";;;AAAA,OAAO,KAAKA,OAAZ,MAAyB,cAAzB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,EAA6BC,MAA7B,QAA0C,OAA1C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAAQC,eAAR,QAA8B,8BAA9B;AACA,SAAQC,WAAR,QAA0B,wBAA1B;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,QAAMC,GAAG,GAAGL,MAAM,EAAlB;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMW,YAAY,GAAG,YAAY;AAC7BL,IAAAA,GAAG,CAACM,OAAJ,GAAc,MAAMd,OAAO,CAACa,YAAR,CAAqB;AACtCE,MAAAA,MAAM,EAAE,IAD8B;AAEtCC,MAAAA,OAAO,EAAE;AAF6B,KAArB,CAApB;AAKH,GAND;;AAOAf,EAAAA,SAAS,CAAC,MAAK;AACXY,IAAAA,YAAY;AACf,GAFQ,EAEN,EAFM,CAAT,CAZc,CAcN;;AAER,QAAMI,OAAO,GAAG,YAAY;AACxB,QAAI,CAACT,GAAG,CAACM,OAAT,EAAkB;AACd;AACH;;AAED,UAAMI,MAAM,GAAG,MAAMV,GAAG,CAACM,OAAJ,CAAYK,KAAZ,CAAkB;AACnCC,MAAAA,WAAW,EAAE,CAAC,UAAD,CADsB;AAEnCC,MAAAA,MAAM,EAAE,IAF2B;AAGnCC,MAAAA,KAAK,EAAE,KAH4B;AAInCC,MAAAA,OAAO,EAAE,CACLlB,eAAe,EADV,EAELC,WAAW,CAACG,KAAD,CAFN,CAJ0B;AAQnCe,MAAAA,MAAM,EAAE;AACJ,gCAAwB,YADpB;AAEJC,QAAAA,MAAM,EAAE;AAFJ;AAR2B,KAAlB,CAArB,CALwB,CAkBxB;;AAEAb,IAAAA,OAAO,CAACM,MAAM,CAACQ,WAAP,CAAmB,CAAnB,EAAsBC,IAAvB,CAAP;AACH,GArBD;;AAuBA,sBACI;AAAA,4BACI;AACI,MAAA,KAAK,EAAElB,KADX;AAEI,MAAA,QAAQ,EAAGmB,CAAD,IAAKlB,QAAQ,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV;AAF3B;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAA,6BACI;AAAQ,QAAA,OAAO,EAAEb,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALJ,eAQI;AAAA,gBAAMN;AAAN;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAlDD;;GAAMJ,G;;KAAAA,G;AAoDNH,QAAQ,CAAC2B,MAAT,eACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QADJ,EACaC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CADb","sourcesContent":["import * as esbuild from 'esbuild-wasm';\nimport {useEffect, useState, useRef} from 'react';\nimport ReactDom from 'react-dom';\nimport {unpkgPathPlugin} from \"./plugins/unpkg-path-plugins\";\nimport {fetchPlugin} from \"./plugins/fetch-plugin\";\n\nconst App = () => {\n    const ref = useRef<any>();\n    const [input, setInput] = useState('');\n    const [code, setCode] = useState('');\n\n    const startService = async () => {\n        ref.current = await esbuild.startService({\n           worker: true,\n           wasmURL: 'https://unpkg.com/esbuild-wasm@0.8.27/esbuild.wasm',\n        });\n\n    }\n    useEffect(()=> {\n        startService();\n    }, []); //one single time\n\n    const onClick = async () => {\n        if (!ref.current) {\n            return;\n        }\n\n        const result = await ref.current.build({\n            entryPoints: ['index.js'],\n            bundle: true,\n            write: false,\n            plugins: [\n                unpkgPathPlugin(),\n                fetchPlugin(input)\n            ],\n            define: {\n                'process.env.NODE_ENV': 'production',\n                global: 'window'\n            }\n        });\n        //console.log(result.outputFiles[0].text);\n\n        setCode(result.outputFiles[0].text);\n    };\n\n    return (\n        <div>\n            <textarea\n                value={input}\n                onChange={(e)=>setInput(e.target.value)}>\n            </textarea>\n            <div>\n                <button onClick={onClick}>Submit</button>\n            </div>\n            <pre>{code}</pre>\n        </div>);\n};\n\nReactDom.render(\n    <App />, document.querySelector('#root')\n)\n"]},"metadata":{},"sourceType":"module"}