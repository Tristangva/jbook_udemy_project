{"ast":null,"code":"var _jsxFileName = \"/Users/tristanwhite/IdeaProjects/jbook/src/components/text-editor.tsx\",\n    _s = $RefreshSig$();\n\n// Text editor\nimport React, { useState, useEffect, useRef } from \"react\";\nimport MDEditor from '@uiw/react-md-editor';\nimport './text-editor.css';\nimport { useActions } from \"../hooks/use-actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TextEditor = ({\n  cell\n}) => {\n  _s();\n\n  const ref = useRef(null);\n  const [editing, setEditing] = useState(false);\n  const {\n    updateCell\n  } = useActions();\n  useEffect(() => {\n    //click in\n    const listener = event => {\n      if (ref.current && event.target && ref.current.contains(event.target)) {\n        //console.log('Element clicked on is inside editor');\n        return;\n      } //console.log(\"element clicked isn not inside editor\");\n\n\n      setEditing(false);\n    };\n\n    document.addEventListener('click', listener, {\n      capture: true\n    }); //click out\n\n    return () => {\n      document.removeEventListener('click', listener, {\n        capture: true\n      });\n    };\n  }, []);\n\n  if (editing) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-editor\",\n      ref: ref,\n      children: /*#__PURE__*/_jsxDEV(MDEditor, {\n        value: cell.content,\n        onChange: v => updateCell(cell.id, v || '')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-editor card\",\n    onClick: () => setEditing(true),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-content\",\n      children: /*#__PURE__*/_jsxDEV(MDEditor.Markdown, {\n        source: cell.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TextEditor, \"atoCYU1Z150r9frPLAYt+dDEDAs=\", false, function () {\n  return [useActions];\n});\n\n_c = TextEditor;\nexport default TextEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextEditor\");","map":{"version":3,"sources":["/Users/tristanwhite/IdeaProjects/jbook/src/components/text-editor.tsx"],"names":["React","useState","useEffect","useRef","MDEditor","useActions","TextEditor","cell","ref","editing","setEditing","updateCell","listener","event","current","target","contains","document","addEventListener","capture","removeEventListener","content","v","id"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAO,mBAAP;AAEA,SAAQC,UAAR,QAAyB,sBAAzB;;;AAMA,MAAMC,UAAqC,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAAA;;AACtD,QAAMC,GAAG,GAAGL,MAAM,CAAwB,IAAxB,CAAlB;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAM;AAACU,IAAAA;AAAD,MAAeN,UAAU,EAA/B;AAEAH,EAAAA,SAAS,CAAC,MAAI;AACV;AACA,UAAMU,QAAQ,GAAIC,KAAD,IAAuB;AACpC,UAAIL,GAAG,CAACM,OAAJ,IAAeD,KAAK,CAACE,MAArB,IAA+BP,GAAG,CAACM,OAAJ,CAAYE,QAAZ,CAAqBH,KAAK,CAACE,MAA3B,CAAnC,EAA+E;AAC3E;AACA;AACH,OAJmC,CAKpC;;;AAEAL,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KARD;;AASAO,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCN,QAAnC,EAA6C;AAACO,MAAAA,OAAO,EAAE;AAAV,KAA7C,EAXU,CAaV;;AACA,WAAO,MAAK;AACRF,MAAAA,QAAQ,CAACG,mBAAT,CAA6B,OAA7B,EAAsCR,QAAtC,EAAgD;AAACO,QAAAA,OAAO,EAAE;AAAV,OAAhD;AACH,KAFD;AAGH,GAjBQ,EAiBN,EAjBM,CAAT;;AAmBA,MAAGV,OAAH,EAAY;AACR,wBACI;AAAK,MAAA,SAAS,EAAE,aAAhB;AAA+B,MAAA,GAAG,EAAED,GAApC;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,KAAK,EAAED,IAAI,CAACc,OAAtB;AAA+B,QAAA,QAAQ,EAAGC,CAAD,IAAMX,UAAU,CAACJ,IAAI,CAACgB,EAAN,EAAUD,CAAC,IAAI,EAAf;AAAzD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAE,kBAAhB;AAAoC,IAAA,OAAO,EAAE,MAAKZ,UAAU,CAAC,IAAD,CAA5D;AAAA,2BACI;AAAK,MAAA,SAAS,EAAE,cAAhB;AAAA,6BACI,QAAC,QAAD,CAAU,QAAV;AAAmB,QAAA,MAAM,EAAEH,IAAI,CAACc;AAAhC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAxCD;;GAAMf,U;UAImBD,U;;;KAJnBC,U;AA0CN,eAAeA,UAAf","sourcesContent":["// Text editor\nimport React, { useState, useEffect, useRef } from \"react\";\nimport MDEditor from '@uiw/react-md-editor';\nimport './text-editor.css';\nimport {Cell} from \"../state/cell\";\nimport {useActions} from \"../hooks/use-actions\";\n\ninterface TextEditorProps {\n    cell: Cell;\n}\n\nconst TextEditor: React.FC<TextEditorProps> = ({cell}) => {\n    const ref = useRef<HTMLDivElement | null>(null);\n    const [editing, setEditing] = useState(false);\n\n    const {updateCell} = useActions();\n\n    useEffect(()=>{\n        //click in\n        const listener = (event: MouseEvent) => {\n            if (ref.current && event.target && ref.current.contains(event.target as Node)) {\n                //console.log('Element clicked on is inside editor');\n                return;\n            }\n            //console.log(\"element clicked isn not inside editor\");\n\n            setEditing(false);\n        };\n        document.addEventListener('click', listener, {capture: true});\n\n        //click out\n        return ()=> {\n            document.removeEventListener('click', listener, {capture: true});\n        }\n    }, []);\n\n    if(editing) {\n        return (\n            <div className={\"text-editor\"} ref={ref}>\n                <MDEditor value={cell.content} onChange={(v)=> updateCell(cell.id, v || '')}/>\n            </div>\n        )\n    }\n\n    return (\n        <div className={\"text-editor card\"} onClick={()=> setEditing(true)}>\n            <div className={\"card-content\"}>\n                <MDEditor.Markdown source={cell.content} />\n            </div>\n        </div>\n    );\n};\n\nexport default TextEditor;\n"]},"metadata":{},"sourceType":"module"}