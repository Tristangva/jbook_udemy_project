{"ast":null,"code":"export const unpkgPathPlugin = () => {\n  return {\n    name: 'unpkg-path-plugin',\n\n    setup(build) {\n      // handle root entry file of 'index.js\n      build.onResolve({\n        filter: /(^index\\.js$)/\n      }, () => {\n        return {\n          path: 'index.js',\n          namespace: 'a'\n        };\n      }); //handle releative paths in a module\n\n      build.onResolve({\n        filter: /^\\.+\\//\n      }, args => {\n        return {\n          namespace: 'a',\n          path: new URL(args.path, 'https://unpkg.com' + args.resolveDir + '/').href\n        };\n      }); // handle main file of a module\n\n      build.onResolve({\n        filter: /.*/\n      }, async args => {\n        return {\n          namespace: 'a',\n          path: `https://unpkg.com/${args.path}`\n        };\n      });\n    }\n\n  };\n};","map":{"version":3,"sources":["/Users/tristanwhite/IdeaProjects/jbook/local-client/src/bundler/plugins/unpkg-path-plugins.ts"],"names":["unpkgPathPlugin","name","setup","build","onResolve","filter","path","namespace","args","URL","resolveDir","href"],"mappings":"AAEA,OAAO,MAAMA,eAAe,GAAG,MAAM;AACjC,SAAO;AACHC,IAAAA,IAAI,EAAE,mBADH;;AAEHC,IAAAA,KAAK,CAACC,KAAD,EAA6B;AAC9B;AACAA,MAAAA,KAAK,CAACC,SAAN,CAAgB;AAACC,QAAAA,MAAM,EAAE;AAAT,OAAhB,EAA2C,MAAM;AAC7C,eAAO;AAACC,UAAAA,IAAI,EAAE,UAAP;AAAmBC,UAAAA,SAAS,EAAE;AAA9B,SAAP;AACH,OAFD,EAF8B,CAK9B;;AACAJ,MAAAA,KAAK,CAACC,SAAN,CAAgB;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAhB,EAAsCG,IAAD,IAAc;AAC/C,eAAO;AACHD,UAAAA,SAAS,EAAE,GADR;AAEHD,UAAAA,IAAI,EAAE,IAAIG,GAAJ,CAAQD,IAAI,CAACF,IAAb,EAAmB,sBAAoBE,IAAI,CAACE,UAAzB,GAAoC,GAAvD,EACJC;AAHC,SAAP;AAKH,OAND,EAN8B,CAa9B;;AACAR,MAAAA,KAAK,CAACC,SAAN,CAAgB;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAhB,EAAkC,MAAOG,IAAP,IAAqB;AAEnD,eAAO;AACHD,UAAAA,SAAS,EAAE,GADR;AAEHD,UAAAA,IAAI,EAAG,qBAAoBE,IAAI,CAACF,IAAK;AAFlC,SAAP;AAKH,OAPD;AAQH;;AAxBE,GAAP;AA0BH,CA3BM","sourcesContent":["import * as esbuild from 'esbuild-wasm';\n\nexport const unpkgPathPlugin = () => {\n    return {\n        name: 'unpkg-path-plugin',\n        setup(build: esbuild.PluginBuild) {\n            // handle root entry file of 'index.js\n            build.onResolve({filter: /(^index\\.js$)/}, () => {\n                return {path: 'index.js', namespace: 'a'};\n            });\n            //handle releative paths in a module\n            build.onResolve({ filter: /^\\.+\\//}, (args:any) => {\n                return {\n                    namespace: 'a',\n                    path: new URL(args.path, 'https://unpkg.com'+args.resolveDir+'/'\n                    ).href,\n                };\n            })\n            // handle main file of a module\n            build.onResolve({ filter: /.*/ }, async (args: any) => {\n\n                return {\n                    namespace: 'a',\n                    path: `https://unpkg.com/${args.path}`\n                }\n\n            });\n        },\n    };\n};\n"]},"metadata":{},"sourceType":"module"}