{"ast":null,"code":"var _jsxFileName = \"/Users/tristanwhite/IdeaProjects/jbook/src/components/code-editor.tsx\";\nimport React from \"react\";\nimport MonacoEditor from '@monaco-editor/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CodeEditor = ({\n  onChange,\n  initalValue\n}) => {\n  const onEditorDidMount = (getValue, monacoEditor) => {\n    monacoEditor.onDidChangeModelContent(() => {\n      onChange(getValue());\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(MonacoEditor, {\n    editorDidMount: onEditorDidMount,\n    value: initalValue,\n    language: \"javascript\",\n    height: \"500px\",\n    theme: \"dark\",\n    options: {\n      wordWrap: 'on',\n      minimap: {\n        enabled: false\n      },\n      showUnused: false,\n      folding: false,\n      lineNumbersMinChars: 3,\n      fontSize: 16,\n      scrollBeyondLastLine: false,\n      automaticLayout: true\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_c = CodeEditor;\nexport default CodeEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"sources":["/Users/tristanwhite/IdeaProjects/jbook/src/components/code-editor.tsx"],"names":["React","MonacoEditor","CodeEditor","onChange","initalValue","onEditorDidMount","getValue","monacoEditor","onDidChangeModelContent","wordWrap","minimap","enabled","showUnused","folding","lineNumbersMinChars","fontSize","scrollBeyondLastLine","automaticLayout"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;;;AAOA,MAAMC,UAAqC,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAAD,KAA4B;AACtE,QAAMC,gBAAgB,GAAG,CAACC,QAAD,EAAwBC,YAAxB,KAA8C;AACnEA,IAAAA,YAAY,CAACC,uBAAb,CAAqC,MAAI;AACrCL,MAAAA,QAAQ,CAACG,QAAQ,EAAT,CAAR;AACH,KAFD;AAGH,GAJD;;AAMA,sBACI,QAAC,YAAD;AACI,IAAA,cAAc,EAAED,gBADpB;AAEI,IAAA,KAAK,EAAED,WAFX;AAGI,IAAA,QAAQ,EAAE,YAHd;AAII,IAAA,MAAM,EAAE,OAJZ;AAKI,IAAA,KAAK,EAAE,MALX;AAMI,IAAA,OAAO,EAAE;AACLK,MAAAA,QAAQ,EAAE,IADL;AAELC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAFJ;AAGLC,MAAAA,UAAU,EAAE,KAHP;AAILC,MAAAA,OAAO,EAAE,KAJJ;AAKLC,MAAAA,mBAAmB,EAAE,CALhB;AAMLC,MAAAA,QAAQ,EAAE,EANL;AAOLC,MAAAA,oBAAoB,EAAE,KAPjB;AAQLC,MAAAA,eAAe,EAAE;AARZ;AANb;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CA1BD;;KAAMf,U;AA4BN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport MonacoEditor from '@monaco-editor/react';\n\ninterface CodeEditorProps {\n    initalValue: string;\n    onChange(value: string): void;\n}\n\nconst CodeEditor: React.FC<CodeEditorProps> = ({onChange, initalValue}) =>{\n    const onEditorDidMount = (getValue: ()=> string, monacoEditor: any) => {\n        monacoEditor.onDidChangeModelContent(()=>{\n            onChange(getValue());\n        })\n    };\n\n    return (\n        <MonacoEditor\n            editorDidMount={onEditorDidMount}\n            value={initalValue}\n            language={\"javascript\"}\n            height={\"500px\"}\n            theme={\"dark\"}\n            options={{\n                wordWrap: 'on',\n                minimap: { enabled: false},\n                showUnused: false,\n                folding: false,\n                lineNumbersMinChars: 3,\n                fontSize: 16,\n                scrollBeyondLastLine: false,\n                automaticLayout: true,\n            }}\n        />\n        );\n};\n\nexport default CodeEditor;\n"]},"metadata":{},"sourceType":"module"}