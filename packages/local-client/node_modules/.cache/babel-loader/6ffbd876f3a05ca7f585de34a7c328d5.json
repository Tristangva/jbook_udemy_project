{"ast":null,"code":"var _jsxFileName = \"/Users/tristanwhite/IdeaProjects/jbook/src/components/cell-list-item.tsx\";\n\n/*\n    Changes type of cell list item, shows action bar on item\n */\nimport TextEditor from \"./text-editor\";\nimport CodeCell from \"./code-cell\";\nimport ActionBar from \"./action-bar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CellListItem = ({\n  cell\n}) => {\n  let child; //switches what type of child\n\n  if (cell.type === 'code') {\n    child = /*#__PURE__*/_jsxDEV(CodeCell, {\n      cell: cell\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 16\n    }, this);\n  } else {\n    child = /*#__PURE__*/_jsxDEV(TextEditor, {\n      cell: cell\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this);\n  } //action bar added\n\n  /* css to make each child have the icons */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ActionBar, {\n      id: cell.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), child]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 11\n  }, this);\n};\n\n_c = CellListItem;\nexport default CellListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"CellListItem\");","map":{"version":3,"sources":["/Users/tristanwhite/IdeaProjects/jbook/src/components/cell-list-item.tsx"],"names":["TextEditor","CodeCell","ActionBar","CellListItem","cell","child","type","id"],"mappings":";;AAAA;AACA;AACA;AAGA,OAAOA,UAAP,MAAuB,eAAvB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,SAAP,MAAsB,cAAtB;;;AAMA,MAAMC,YAAyC,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAC1D,MAAIC,KAAJ,CAD0D,CAE1D;;AACA,MAAID,IAAI,CAACE,IAAL,KAAa,MAAjB,EAAwB;AACpBD,IAAAA,KAAK,gBAAE,QAAC,QAAD;AAAU,MAAA,IAAI,EAAED;AAAhB;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAEO;AACHC,IAAAA,KAAK,gBAAG,QAAC,UAAD;AAAY,MAAA,IAAI,EAAED;AAAlB;AAAA;AAAA;AAAA;AAAA,YAAR;AACH,GAPyD,CAQ1D;;AACA;;;AACA,sBAAM;AAAA,4BACF,QAAC,SAAD;AAAW,MAAA,EAAE,EAAEA,IAAI,CAACG;AAApB;AAAA;AAAA;AAAA;AAAA,YADE,EAEDF,KAFC;AAAA;AAAA;AAAA;AAAA;AAAA,UAAN;AAIH,CAdD;;KAAMF,Y;AAgBN,eAAeA,YAAf","sourcesContent":["/*\n    Changes type of cell list item, shows action bar on item\n */\n\nimport {Cell} from \"../state/cell\";\nimport TextEditor from \"./text-editor\";\nimport CodeCell from \"./code-cell\";\nimport ActionBar from \"./action-bar\";\n\ninterface CellListItemProps {\n    cell: Cell;\n}\n\nconst CellListItem: React.FC<CellListItemProps> = ({cell}) => {\n    let child: JSX.Element;\n    //switches what type of child\n    if (cell.type ==='code'){\n        child =<CodeCell cell={cell}/>\n    } else {\n        child = <TextEditor cell={cell}/>\n    }\n    //action bar added\n    /* css to make each child have the icons */\n    return<div>\n        <ActionBar id={cell.id} />\n        {child}\n    </div>\n};\n\nexport default CellListItem;\n"]},"metadata":{},"sourceType":"module"}