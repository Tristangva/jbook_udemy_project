{"ast":null,"code":"var _jsxFileName = \"/Users/tristanwhite/IdeaProjects/jbook/src/components/resizable.tsx\",\n    _s = $RefreshSig$();\n\nimport { ResizableBox } from \"react-resizable\";\nimport './resizable.css';\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Resizable = ({\n  direction,\n  children\n}) => {\n  _s();\n\n  let resizableProps;\n  const [innerHeight, setInnerHeight] = useState(window.innerHeight);\n  const [innerWidth, setInnerWidth] = useState(window.innerWidth);\n  const [width, setWidth] = useState(window.innerWidth * 0.75);\n  useEffect(() => {\n    let timer; // lets lest lag happen\n\n    const listener = () => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n\n      timer = setTimeout(() => {\n        setInnerHeight(window.innerHeight);\n        setInnerWidth(window.innerWidth);\n\n        if (window.innerWidth * 0.75 < width) {\n          setWidth(window.innerWidth * 0.75);\n        }\n      }, 100);\n    };\n\n    window.addEventListener('resize', listener);\n    return () => {\n      window.removeEventListener('resize', listener);\n    };\n  }, []);\n\n  if (direction === 'horizontal') {\n    resizableProps = {\n      className: 'resize-horizontal',\n      minConstraints: [innerWidth * 0.2, Infinity],\n      maxConstraints: [innerWidth * 0.75, Infinity],\n      height: Infinity,\n      width,\n      resizeHandles: ['e'],\n      onResizeStop: (event, data) => {\n        setWidth(data.size.width);\n      }\n    };\n  } else {\n    resizableProps = {\n      minConstraints: [Infinity, 24],\n      maxConstraints: [Infinity, innerHeight * 0.9],\n      height: 300,\n      width: Infinity,\n      resizeHandles: ['s']\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(ResizableBox, { ...resizableProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Resizable, \"STTUJocP4fdSIR3xRVGYvpKphv0=\");\n\n_c = Resizable;\nexport default Resizable;\n\nvar _c;\n\n$RefreshReg$(_c, \"Resizable\");","map":{"version":3,"sources":["/Users/tristanwhite/IdeaProjects/jbook/src/components/resizable.tsx"],"names":["ResizableBox","useEffect","useState","Resizable","direction","children","resizableProps","innerHeight","setInnerHeight","window","innerWidth","setInnerWidth","width","setWidth","timer","listener","clearTimeout","setTimeout","addEventListener","removeEventListener","className","minConstraints","Infinity","maxConstraints","height","resizeHandles","onResizeStop","event","data","size"],"mappings":";;;AAAA,SAAQA,YAAR,QAA8C,iBAA9C;AACA,OAAO,iBAAP;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;;;AAMA,MAAMC,SAAmC,GAAG,CAAC;AAACC,EAAAA,SAAD;AACIC,EAAAA;AADJ,CAAD,KACmB;AAAA;;AAC3D,MAAIC,cAAJ;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAACO,MAAM,CAACF,WAAR,CAA9C;AACA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAACO,MAAM,CAACC,UAAR,CAA5C;AACA,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAACO,MAAM,CAACC,UAAP,GAAkB,IAAnB,CAAlC;AAEAT,EAAAA,SAAS,CAAC,MAAI;AAEV,QAAIa,KAAJ,CAFU,CAIV;;AACA,UAAMC,QAAQ,GAAG,MAAM;AACnB,UAAGD,KAAH,EAAS;AACLE,QAAAA,YAAY,CAACF,KAAD,CAAZ;AACH;;AACDA,MAAAA,KAAK,GAAGG,UAAU,CAAC,MAAK;AACpBT,QAAAA,cAAc,CAACC,MAAM,CAACF,WAAR,CAAd;AACAI,QAAAA,aAAa,CAACF,MAAM,CAACC,UAAR,CAAb;;AACA,YAAGD,MAAM,CAACC,UAAP,GAAkB,IAAlB,GAAyBE,KAA5B,EAAmC;AAC/BC,UAAAA,QAAQ,CAACJ,MAAM,CAACC,UAAP,GAAkB,IAAnB,CAAR;AACH;AACJ,OANiB,EAMf,GANe,CAAlB;AAOH,KAXD;;AAaAD,IAAAA,MAAM,CAACS,gBAAP,CAAwB,QAAxB,EAAkCH,QAAlC;AAEA,WAAM,MAAK;AACPN,MAAAA,MAAM,CAACU,mBAAP,CAA2B,QAA3B,EAAqCJ,QAArC;AACH,KAFD;AAGH,GAvBQ,EAuBN,EAvBM,CAAT;;AAyBA,MAAIX,SAAS,KAAK,YAAlB,EAAgC;AAC5BE,IAAAA,cAAc,GAAG;AACbc,MAAAA,SAAS,EAAE,mBADE;AAEbC,MAAAA,cAAc,EAAE,CAACX,UAAU,GAAC,GAAZ,EAAiBY,QAAjB,CAFH;AAGbC,MAAAA,cAAc,EAAE,CAACb,UAAU,GAAC,IAAZ,EAAkBY,QAAlB,CAHH;AAIbE,MAAAA,MAAM,EAAEF,QAJK;AAKbV,MAAAA,KALa;AAMba,MAAAA,aAAa,EAAE,CAAC,GAAD,CANF;AAObC,MAAAA,YAAY,EAAE,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAC3Bf,QAAAA,QAAQ,CAACe,IAAI,CAACC,IAAL,CAAUjB,KAAX,CAAR;AACH;AATY,KAAjB;AAWH,GAZD,MAYO;AACHN,IAAAA,cAAc,GAAG;AACbe,MAAAA,cAAc,EAAE,CAACC,QAAD,EAAW,EAAX,CADH;AAEbC,MAAAA,cAAc,EAAE,CAACD,QAAD,EAAWf,WAAW,GAAC,GAAvB,CAFH;AAGbiB,MAAAA,MAAM,EAAE,GAHK;AAIbZ,MAAAA,KAAK,EAAEU,QAJM;AAKbG,MAAAA,aAAa,EAAE,CAAC,GAAD;AALF,KAAjB;AAOH;;AAED,sBAAO,QAAC,YAAD,OAAkBnB,cAAlB;AAAA,cACFD;AADE;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CAzDD;;GAAMF,S;;KAAAA,S;AA2DN,eAAeA,SAAf","sourcesContent":["import {ResizableBox, ResizableBoxProps} from \"react-resizable\";\nimport './resizable.css'\nimport {useEffect, useState} from \"react\";\n\ninterface ResizableProps {\n    direction: 'horizontal' | 'vertical';\n}\n\nconst Resizable: React.FC<ResizableProps> = ({direction,\n                                                 children}) => {\n    let resizableProps: ResizableBoxProps;\n    const [innerHeight, setInnerHeight] = useState(window.innerHeight);\n    const [innerWidth, setInnerWidth] = useState(window.innerWidth);\n    const [width, setWidth] = useState(window.innerWidth*0.75)\n\n    useEffect(()=>{\n\n        let timer: any;\n\n        // lets lest lag happen\n        const listener = () => {\n            if(timer){\n                clearTimeout(timer)\n            }\n            timer = setTimeout(()=> {\n                setInnerHeight(window.innerHeight);\n                setInnerWidth(window.innerWidth);\n                if(window.innerWidth*0.75 < width) {\n                    setWidth(window.innerWidth*0.75);\n                }\n            }, 100);\n        }\n\n        window.addEventListener('resize', listener);\n\n        return()=> {\n            window.removeEventListener('resize', listener);\n        }\n    }, []);\n\n    if (direction === 'horizontal') {\n        resizableProps = {\n            className: 'resize-horizontal',\n            minConstraints: [innerWidth*0.2, Infinity],\n            maxConstraints: [innerWidth*0.75, Infinity],\n            height: Infinity,\n            width,\n            resizeHandles: ['e'],\n            onResizeStop: (event, data) => {\n                setWidth(data.size.width);\n            }\n        };\n    } else {\n        resizableProps = {\n            minConstraints: [Infinity, 24],\n            maxConstraints: [Infinity, innerHeight*0.9],\n            height: 300,\n            width: Infinity,\n            resizeHandles: ['s'],\n        };\n    }\n\n    return <ResizableBox {...resizableProps}>\n        {children}\n    </ResizableBox>;\n};\n\nexport default Resizable;\n"]},"metadata":{},"sourceType":"module"}