{"ast":null,"code":"import _regeneratorRuntime from\"/Users/tristanwhite/IdeaProjects/jbook/packages/local-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/tristanwhite/IdeaProjects/jbook/packages/local-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";// No in browser stuff from design of app\nimport'./code-cell.css';import React,{useEffect}from'react';import CodeEditor from'./code-editor';import Preview from'./preview';import Resizable from\"./resizable\";import{useActions}from\"../hooks/use-actions\";import{useTypedSelector}from\"../hooks/use-typed-selector\";import{useCumulativeCode}from\"../hooks/use-cumulative-code\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CodeCell=function CodeCell(_ref){var cell=_ref.cell;var _useActions=useActions(),updateCell=_useActions.updateCell,createBundle=_useActions.createBundle;var bundle=useTypedSelector(function(state){return state.bundles[cell.id];});var cumulativeCode=useCumulativeCode(cell.id);//bundling process\nuseEffect(function(){// if no bundle / if on load up\nif(!bundle){createBundle(cell.id,cumulativeCode);return;}var timer=setTimeout(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:createBundle(cell.id,cumulativeCode);case 1:case\"end\":return _context.stop();}}},_callee);})),750);return function(){clearTimeout(timer);};// eslint-disable-next-line react-hooks/exhaustive-deps\n},[cumulativeCode,cell.id,createBundle]);return/*#__PURE__*/_jsx(Resizable,{direction:\"vertical\",children:/*#__PURE__*/_jsxs(\"div\",{style:{height:'calc(100% - 10px)',display:'flex',flexDirection:'row'},children:[/*#__PURE__*/_jsx(Resizable,{direction:\"horizontal\",children:/*#__PURE__*/_jsx(CodeEditor,{initalValue:cell.content,onChange:function onChange(value){return updateCell(cell.id,value);}})}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-wrapper\",children:!bundle||bundle.loading===true?/*#__PURE__*/_jsx(\"div\",{className:\"progress-cover\",children:/*#__PURE__*/_jsx(\"progress\",{className:\"progress is-small is-prumary\",max:\"100\",children:\"Loading\"})}):/*#__PURE__*/_jsx(Preview,{code:bundle.code,bundlingStatus:bundle.err})})]})});};export default CodeCell;","map":{"version":3,"sources":["/Users/tristanwhite/IdeaProjects/jbook/packages/local-client/src/components/code-cell.tsx"],"names":["React","useEffect","CodeEditor","Preview","Resizable","useActions","useTypedSelector","useCumulativeCode","CodeCell","cell","updateCell","createBundle","bundle","state","bundles","id","cumulativeCode","timer","setTimeout","clearTimeout","height","display","flexDirection","content","value","loading","code","err"],"mappings":"mWAAA;AAEA,MAAO,iBAAP,CACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,UAAP,KAAuB,eAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CAEA,OAASC,UAAT,KAA0B,sBAA1B,CACA,OAASC,gBAAT,KAAiC,6BAAjC,CACA,OAAQC,iBAAR,KAAiC,8BAAjC,C,wFAMA,GAAMC,CAAAA,QAAiC,CAAG,QAApCA,CAAAA,QAAoC,MAAc,IAAXC,CAAAA,IAAW,MAAXA,IAAW,CACpD,gBAAmCJ,UAAU,EAA7C,CAAOK,UAAP,aAAOA,UAAP,CAAmBC,YAAnB,aAAmBA,YAAnB,CACA,GAAMC,CAAAA,MAAM,CAAGN,gBAAgB,CAAC,SAACO,KAAD,QAAWA,CAAAA,KAAK,CAACC,OAAN,CAAcL,IAAI,CAACM,EAAnB,CAAX,EAAD,CAA/B,CACA,GAAMC,CAAAA,cAAc,CAAGT,iBAAiB,CAACE,IAAI,CAACM,EAAN,CAAxC,CAEA;AACAd,SAAS,CAAC,UAAK,CAEX;AACA,GAAI,CAACW,MAAL,CAAa,CACTD,YAAY,CAACF,IAAI,CAACM,EAAN,CAAUC,cAAV,CAAZ,CACA,OACH,CAED,GAAMC,CAAAA,KAAK,CAAGC,UAAU,sEAAC,mIACrBP,YAAY,CAACF,IAAI,CAACM,EAAN,CAAUC,cAAV,CAAZ,CADqB,sDAAD,GAErB,GAFqB,CAAxB,CAIA,MAAM,WAAM,CACRG,YAAY,CAACF,KAAD,CAAZ,CACH,CAFD,CAGA;AACH,CAhBQ,CAgBN,CAACD,cAAD,CAAiBP,IAAI,CAACM,EAAtB,CAA0BJ,YAA1B,CAhBM,CAAT,CAkBA,mBACI,KAAC,SAAD,EAAW,SAAS,CAAE,UAAtB,uBAGI,aAAK,KAAK,CAAE,CAACS,MAAM,CAAE,mBAAT,CAA8BC,OAAO,CAAE,MAAvC,CAA+CC,aAAa,CAAE,KAA9D,CAAZ,wBACI,KAAC,SAAD,EAAW,SAAS,CAAE,YAAtB,uBACI,KAAC,UAAD,EACI,WAAW,CAAEb,IAAI,CAACc,OADtB,CAEI,QAAQ,CAAE,kBAACC,KAAD,QAAWd,CAAAA,UAAU,CAACD,IAAI,CAACM,EAAN,CAAUS,KAAV,CAArB,EAFd,EADJ,EADJ,cAOI,YAAK,SAAS,CAAE,kBAAhB,UACC,CAACZ,MAAD,EAAWA,MAAM,CAACa,OAAP,GAAmB,IAA9B,cACG,YAAK,SAAS,CAAE,gBAAhB,uBACI,iBAAU,SAAS,CAAE,8BAArB,CAAqD,GAAG,CAAC,KAAzD,qBADJ,EADH,cAOG,KAAC,OAAD,EAAS,IAAI,CAAEb,MAAM,CAACc,IAAtB,CAA4B,cAAc,CAAEd,MAAM,CAACe,GAAnD,EARJ,EAPJ,GAHJ,EADJ,CAyBH,CAjDD,CAmDA,cAAenB,CAAAA,QAAf","sourcesContent":["// No in browser stuff from design of app\n\nimport './code-cell.css';\nimport React, { useEffect } from 'react';\nimport CodeEditor from './code-editor';\nimport Preview from './preview';\nimport Resizable from \"./resizable\";\nimport { Cell } from '../state';\nimport { useActions} from \"../hooks/use-actions\";\nimport { useTypedSelector } from \"../hooks/use-typed-selector\";\nimport{ useCumulativeCode } from \"../hooks/use-cumulative-code\";\n\ninterface CodeCellProps {\n    cell: Cell;\n}\n\nconst CodeCell: React.FC<CodeCellProps> = ({ cell }) => {\n    const {updateCell, createBundle} = useActions();\n    const bundle = useTypedSelector((state) => state.bundles[cell.id]);\n    const cumulativeCode = useCumulativeCode(cell.id);\n\n    //bundling process\n    useEffect(()=> {\n\n        // if no bundle / if on load up\n        if (!bundle) {\n            createBundle(cell.id, cumulativeCode);\n            return;\n        }\n\n        const timer = setTimeout(async ()=> {\n            createBundle(cell.id, cumulativeCode);\n        }, 750);\n\n        return() => {\n            clearTimeout(timer);\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [cumulativeCode, cell.id, createBundle]);\n\n    return (\n        <Resizable direction={\"vertical\"}>\n            {/* 'calc(100% - 10px)' has to have spaces in numbers otherwise doesnt work\n                   This was note to self for future referance */}\n            <div style={{height: 'calc(100% - 10px)', display: 'flex', flexDirection: 'row'}}>\n                <Resizable direction={\"horizontal\"}>\n                    <CodeEditor\n                        initalValue={cell.content}\n                        onChange={(value) => updateCell(cell.id, value)}\n                    />\n                </Resizable>\n                <div className={\"progress-wrapper\"}>\n                {!bundle || bundle.loading === true ? (\n                    <div className={\"progress-cover\"}>\n                        <progress className={\"progress is-small is-prumary\"} max=\"100\">\n                            Loading\n                        </progress>\n                    </div>\n                ) : (\n                    <Preview code={bundle.code} bundlingStatus={bundle.err} />\n                )}\n                </div>\n            </div>\n        </Resizable>\n    );\n};\n\nexport default CodeCell;\n"]},"metadata":{},"sourceType":"module"}