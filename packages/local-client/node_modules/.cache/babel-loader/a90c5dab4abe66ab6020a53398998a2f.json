{"ast":null,"code":"var _jsxFileName = \"/Users/tristanwhite/IdeaProjects/jbook/src/components/resizable.tsx\";\nimport { ResizableBox } from \"react-resizable\";\nimport './resizable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Resizable = ({\n  direction,\n  children\n}) => {\n  let resizableProps;\n\n  if (direction === 'horizontal') {\n    resizableProps = {\n      className: 'resize-horizontal',\n      maxConstraints: [window.innerWidth * 0.2, Infinity],\n      minConstraints: [window.innerWidth * 0.75, Infinity],\n      height: Infinity,\n      width: window.innerWidth * 0.75,\n      resizeHandles: ['e']\n    };\n  } else {\n    resizableProps = {\n      maxConstraints: [Infinity, window.innerHeight * 0.9],\n      minConstraints: [Infinity, 24],\n      height: 300,\n      width: Infinity,\n      resizeHandles: ['s']\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(ResizableBox, { ...resizableProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 12\n  }, this);\n};\n\n_c = Resizable;\nexport default Resizable;\n\nvar _c;\n\n$RefreshReg$(_c, \"Resizable\");","map":{"version":3,"sources":["/Users/tristanwhite/IdeaProjects/jbook/src/components/resizable.tsx"],"names":["ResizableBox","Resizable","direction","children","resizableProps","className","maxConstraints","window","innerWidth","Infinity","minConstraints","height","width","resizeHandles","innerHeight"],"mappings":";AAAA,SAAQA,YAAR,QAA8C,iBAA9C;AACA,OAAO,iBAAP;;;AAMA,MAAMC,SAAmC,GAAG,CAAC;AAACC,EAAAA,SAAD;AACIC,EAAAA;AADJ,CAAD,KACmB;AAC3D,MAAIC,cAAJ;;AAEA,MAAIF,SAAS,KAAK,YAAlB,EAAgC;AAC5BE,IAAAA,cAAc,GAAG;AACbC,MAAAA,SAAS,EAAE,mBADE;AAEbC,MAAAA,cAAc,EAAE,CAACC,MAAM,CAACC,UAAP,GAAkB,GAAnB,EAAwBC,QAAxB,CAFH;AAGbC,MAAAA,cAAc,EAAE,CAACH,MAAM,CAACC,UAAP,GAAkB,IAAnB,EAAyBC,QAAzB,CAHH;AAIbE,MAAAA,MAAM,EAAEF,QAJK;AAKbG,MAAAA,KAAK,EAAEL,MAAM,CAACC,UAAP,GAAkB,IALZ;AAMbK,MAAAA,aAAa,EAAE,CAAC,GAAD;AANF,KAAjB;AAQH,GATD,MASO;AACHT,IAAAA,cAAc,GAAG;AACbE,MAAAA,cAAc,EAAE,CAACG,QAAD,EAAWF,MAAM,CAACO,WAAP,GAAmB,GAA9B,CADH;AAEbJ,MAAAA,cAAc,EAAE,CAACD,QAAD,EAAW,EAAX,CAFH;AAGbE,MAAAA,MAAM,EAAE,GAHK;AAIbC,MAAAA,KAAK,EAAEH,QAJM;AAKbI,MAAAA,aAAa,EAAE,CAAC,GAAD;AALF,KAAjB;AAOH;;AAED,sBAAO,QAAC,YAAD,OAAkBT,cAAlB;AAAA,cACFD;AADE;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CA1BD;;KAAMF,S;AA4BN,eAAeA,SAAf","sourcesContent":["import {ResizableBox, ResizableBoxProps} from \"react-resizable\";\nimport './resizable.css'\n\ninterface ResizableProps {\n    direction: 'horizontal' | 'vertical';\n}\n\nconst Resizable: React.FC<ResizableProps> = ({direction,\n                                                 children}) => {\n    let resizableProps: ResizableBoxProps;\n\n    if (direction === 'horizontal') {\n        resizableProps = {\n            className: 'resize-horizontal',\n            maxConstraints: [window.innerWidth*0.2, Infinity],\n            minConstraints: [window.innerWidth*0.75, Infinity],\n            height: Infinity,\n            width: window.innerWidth*0.75,\n            resizeHandles: ['e'],\n        };\n    } else {\n        resizableProps = {\n            maxConstraints: [Infinity, window.innerHeight*0.9],\n            minConstraints: [Infinity, 24],\n            height: 300,\n            width: Infinity,\n            resizeHandles: ['s'],\n        };\n    }\n\n    return <ResizableBox {...resizableProps}>\n        {children}\n    </ResizableBox>;\n};\n\nexport default Resizable;\n"]},"metadata":{},"sourceType":"module"}