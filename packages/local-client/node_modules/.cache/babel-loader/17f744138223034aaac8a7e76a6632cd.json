{"ast":null,"code":"import{Fragment}from\"react\";import{useTypedSelector}from\"../hooks/use-typed-selector\";import CellListItem from\"./cell-list-item\";import AddCell from\"./add-cell\";import'./cell-list.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CellList=function CellList(){var cells=useTypedSelector(function(_ref){var _ref$cells=_ref.cells,order=_ref$cells.order,data=_ref$cells.data;return order.map(function(id){return data[id];});});var renderedCells=cells.map(function(cell){return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(CellListItem,{cell:cell},cell.id),/*#__PURE__*/_jsx(AddCell,{previousCellId:cell.id})]},cell.id);});return/*#__PURE__*/_jsxs(\"div\",{className:\"cell-list\",children:[/*#__PURE__*/_jsx(AddCell,{forceVisible:cells.length===0,previousCellId:null}),\" \",renderedCells]});};export default CellList;","map":{"version":3,"sources":["/Users/tristanwhite/IdeaProjects/jbook/packages/local-client/src/components/cell-list.tsx"],"names":["Fragment","useTypedSelector","CellListItem","AddCell","CellList","cells","order","data","map","id","renderedCells","cell","length"],"mappings":"AAAA,OAAQA,QAAR,KAAuB,OAAvB,CACA,OAAQC,gBAAR,KAA+B,6BAA/B,CACA,MAAOC,CAAAA,YAAP,KAAyB,kBAAzB,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CACA,MAAO,iBAAP,C,wFAEA,GAAMC,CAAAA,QAAkB,CAAG,QAArBA,CAAAA,QAAqB,EAAM,CAC7B,GAAMC,CAAAA,KAAK,CAAGJ,gBAAgB,CAAC,cAA6B,qBAA3BI,KAA2B,CAAlBC,KAAkB,YAAlBA,KAAkB,CAAXC,IAAW,YAAXA,IAAW,CACxD,MAAOD,CAAAA,KAAK,CAACE,GAAN,CAAU,SAACC,EAAD,CAAQ,CACrB,MAAOF,CAAAA,IAAI,CAACE,EAAD,CAAX,CACH,CAFM,CAAP,CAGH,CAJ6B,CAA9B,CAMA,GAAMC,CAAAA,aAAa,CAAGL,KAAK,CAACG,GAAN,CAAU,SAACG,IAAD,qBAC5B,MAAC,QAAD,yBACI,KAAC,YAAD,EAA4B,IAAI,CAAEA,IAAlC,EAAmBA,IAAI,CAACF,EAAxB,CADJ,cAEI,KAAC,OAAD,EAAS,cAAc,CAAEE,IAAI,CAACF,EAA9B,EAFJ,GAAeE,IAAI,CAACF,EAApB,CAD4B,EAAV,CAAtB,CAOA,mBACI,aAAK,SAAS,CAAE,WAAhB,wBACI,KAAC,OAAD,EAAS,YAAY,CAAEJ,KAAK,CAACO,MAAN,GAAiB,CAAxC,CAA2C,cAAc,CAAE,IAA3D,EADJ,KAEKF,aAFL,GADJ,CAMH,CApBD,CAsBA,cAAeN,CAAAA,QAAf","sourcesContent":["import {Fragment} from \"react\";\nimport {useTypedSelector} from \"../hooks/use-typed-selector\";\nimport CellListItem from \"./cell-list-item\";\nimport AddCell from \"./add-cell\";\nimport './cell-list.css'\n\nconst CellList: React.FC = () => {\n    const cells = useTypedSelector(({cells: { order, data} })=> {\n        return order.map((id) => {\n            return data[id];\n        });\n    });\n\n    const renderedCells = cells.map((cell) => (\n        <Fragment key={cell.id}>\n            <CellListItem key={cell.id} cell={cell} />\n            <AddCell previousCellId={cell.id} />\n        </Fragment>\n    ));\n\n    return (\n        <div className={\"cell-list\"}>\n            <AddCell forceVisible={cells.length === 0} previousCellId={null} /> {/* Add cell at the bottom with null */}\n            {renderedCells}\n        </div>\n    )\n};\n\nexport default CellList;\n"]},"metadata":{},"sourceType":"module"}