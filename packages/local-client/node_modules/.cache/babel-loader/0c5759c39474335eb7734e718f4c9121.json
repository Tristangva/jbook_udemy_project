{"ast":null,"code":"import _slicedToArray from\"/Users/tristanwhite/IdeaProjects/jbook/packages/local-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";// Text editor\nimport React,{useState,useEffect,useRef}from\"react\";import MDEditor from'@uiw/react-md-editor';import'./text-editor.css';import{useActions}from\"../hooks/use-actions\";import{jsx as _jsx}from\"react/jsx-runtime\";var TextEditor=function TextEditor(_ref){var cell=_ref.cell;var ref=useRef(null);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),editing=_useState2[0],setEditing=_useState2[1];var _useActions=useActions(),updateCell=_useActions.updateCell;useEffect(function(){//click in\nvar listener=function listener(event){if(ref.current&&event.target&&ref.current.contains(event.target)){//console.log('Element clicked on is inside editor');\nreturn;}//console.log(\"element clicked isn not inside editor\");\nsetEditing(false);};document.addEventListener('click',listener,{capture:true});//click out\nreturn function(){document.removeEventListener('click',listener,{capture:true});};},[]);if(editing){return/*#__PURE__*/_jsx(\"div\",{className:\"text-editor\",ref:ref,children:/*#__PURE__*/_jsx(MDEditor,{value:cell.content,onChange:function onChange(v){return updateCell(cell.id,v||'');}})});}return/*#__PURE__*/_jsx(\"div\",{className:\"text-editor card\",onClick:function onClick(){return setEditing(true);},children:/*#__PURE__*/_jsx(\"div\",{className:\"card-content\",children:/*#__PURE__*/_jsx(MDEditor.Markdown,{source:cell.content||'Click to edit'})})});};export default TextEditor;","map":{"version":3,"sources":["/Users/tristanwhite/IdeaProjects/jbook/packages/local-client/src/components/text-editor.tsx"],"names":["React","useState","useEffect","useRef","MDEditor","useActions","TextEditor","cell","ref","editing","setEditing","updateCell","listener","event","current","target","contains","document","addEventListener","capture","removeEventListener","content","v","id"],"mappings":"mLAAA;AACA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,MAArC,KAAmD,OAAnD,CACA,MAAOC,CAAAA,QAAP,KAAqB,sBAArB,CACA,MAAO,mBAAP,CAEA,OAAQC,UAAR,KAAyB,sBAAzB,C,2CAMA,GAAMC,CAAAA,UAAqC,CAAG,QAAxCA,CAAAA,UAAwC,MAAY,IAAVC,CAAAA,IAAU,MAAVA,IAAU,CACtD,GAAMC,CAAAA,GAAG,CAAGL,MAAM,CAAwB,IAAxB,CAAlB,CACA,cAA8BF,QAAQ,CAAC,KAAD,CAAtC,wCAAOQ,OAAP,eAAgBC,UAAhB,eAEA,gBAAqBL,UAAU,EAA/B,CAAOM,UAAP,aAAOA,UAAP,CAEAT,SAAS,CAAC,UAAI,CACV;AACA,GAAMU,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAuB,CACpC,GAAIL,GAAG,CAACM,OAAJ,EAAeD,KAAK,CAACE,MAArB,EAA+BP,GAAG,CAACM,OAAJ,CAAYE,QAAZ,CAAqBH,KAAK,CAACE,MAA3B,CAAnC,CAA+E,CAC3E;AACA,OACH,CACD;AAEAL,UAAU,CAAC,KAAD,CAAV,CACH,CARD,CASAO,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,CAAmCN,QAAnC,CAA6C,CAACO,OAAO,CAAE,IAAV,CAA7C,EAEA;AACA,MAAO,WAAK,CACRF,QAAQ,CAACG,mBAAT,CAA6B,OAA7B,CAAsCR,QAAtC,CAAgD,CAACO,OAAO,CAAE,IAAV,CAAhD,EACH,CAFD,CAGH,CAjBQ,CAiBN,EAjBM,CAAT,CAmBA,GAAGV,OAAH,CAAY,CACR,mBACI,YAAK,SAAS,CAAE,aAAhB,CAA+B,GAAG,CAAED,GAApC,uBACI,KAAC,QAAD,EAAU,KAAK,CAAED,IAAI,CAACc,OAAtB,CAA+B,QAAQ,CAAE,kBAACC,CAAD,QAAMX,CAAAA,UAAU,CAACJ,IAAI,CAACgB,EAAN,CAAUD,CAAC,EAAI,EAAf,CAAhB,EAAzC,EADJ,EADJ,CAKH,CAED,mBACI,YAAK,SAAS,CAAE,kBAAhB,CAAoC,OAAO,CAAE,yBAAKZ,CAAAA,UAAU,CAAC,IAAD,CAAf,EAA7C,uBACI,YAAK,SAAS,CAAE,cAAhB,uBACI,KAAC,QAAD,CAAU,QAAV,EAAmB,MAAM,CAAEH,IAAI,CAACc,OAAL,EAAgB,eAA3C,EADJ,EADJ,EADJ,CAOH,CAxCD,CA0CA,cAAef,CAAAA,UAAf","sourcesContent":["// Text editor\nimport React, { useState, useEffect, useRef } from \"react\";\nimport MDEditor from '@uiw/react-md-editor';\nimport './text-editor.css';\nimport {Cell} from \"../state/cell\";\nimport {useActions} from \"../hooks/use-actions\";\n\ninterface TextEditorProps {\n    cell: Cell;\n}\n\nconst TextEditor: React.FC<TextEditorProps> = ({cell}) => {\n    const ref = useRef<HTMLDivElement | null>(null);\n    const [editing, setEditing] = useState(false);\n\n    const {updateCell} = useActions();\n\n    useEffect(()=>{\n        //click in\n        const listener = (event: MouseEvent) => {\n            if (ref.current && event.target && ref.current.contains(event.target as Node)) {\n                //console.log('Element clicked on is inside editor');\n                return;\n            }\n            //console.log(\"element clicked isn not inside editor\");\n\n            setEditing(false);\n        };\n        document.addEventListener('click', listener, {capture: true});\n\n        //click out\n        return ()=> {\n            document.removeEventListener('click', listener, {capture: true});\n        }\n    }, []);\n\n    if(editing) {\n        return (\n            <div className={\"text-editor\"} ref={ref}>\n                <MDEditor value={cell.content} onChange={(v)=> updateCell(cell.id, v || '')}/>\n            </div>\n        )\n    }\n\n    return (\n        <div className={\"text-editor card\"} onClick={()=> setEditing(true)}>\n            <div className={\"card-content\"}>\n                <MDEditor.Markdown source={cell.content || 'Click to edit'} />\n            </div>\n        </div>\n    );\n};\n\nexport default TextEditor;\n"]},"metadata":{},"sourceType":"module"}