{"ast":null,"code":"var _jsxFileName = \"/Users/tristanwhite/IdeaProjects/jbook/src/components/code-cell.tsx\",\n    _s = $RefreshSig$();\n\n// No in browser stuff from design of app\nimport { useState, useEffect } from 'react';\nimport CodeEditor from './code-editor';\nimport Preview from './preview';\nimport bundle from '../bundler/index';\nimport Resizable from \"./resizable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CodeCell = () => {\n  _s();\n\n  const [code, setCode] = useState('');\n  const [input, setInput] = useState('');\n  useEffect(() => {\n    const timer = setTimeout(async () => {\n      const output = await bundle(input);\n      setCode(output);\n    }, 1000);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [input]);\n  return /*#__PURE__*/_jsxDEV(Resizable, {\n    direction: \"vertical\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'row'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Resizable, {\n        direction: \"horizontal\",\n        children: /*#__PURE__*/_jsxDEV(CodeEditor, {\n          initalValue: \"const a = 1;\",\n          onChange: value => setInput(value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Preview, {\n        code: code\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CodeCell, \"8nvX1PPqfkcElUu7UWRft8XYrDs=\");\n\n_c = CodeCell;\nexport default CodeCell;\n\nvar _c;\n\n$RefreshReg$(_c, \"CodeCell\");","map":{"version":3,"sources":["/Users/tristanwhite/IdeaProjects/jbook/src/components/code-cell.tsx"],"names":["useState","useEffect","CodeEditor","Preview","bundle","Resizable","CodeCell","code","setCode","input","setInput","timer","setTimeout","output","clearTimeout","height","display","flexDirection","value"],"mappings":";;;AAAA;AAEA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AAGAC,EAAAA,SAAS,CAAC,MAAK;AACX,UAAMU,KAAK,GAAGC,UAAU,CAAC,YAAW;AAChC,YAAMC,MAAM,GAAG,MAAMT,MAAM,CAACK,KAAD,CAA3B;AACAD,MAAAA,OAAO,CAACK,MAAD,CAAP;AACH,KAHuB,EAGrB,IAHqB,CAAxB;AAKA,WAAM,MAAM;AACRC,MAAAA,YAAY,CAACH,KAAD,CAAZ;AACH,KAFD;AAGH,GATQ,EASN,CAACF,KAAD,CATM,CAAT;AAWA,sBACI,QAAC,SAAD;AAAW,IAAA,SAAS,EAAE,UAAtB;AAAA,2BACI;AAAK,MAAA,KAAK,EAAE;AAACM,QAAAA,MAAM,EAAE,MAAT;AAAiBC,QAAAA,OAAO,EAAE,MAA1B;AAAkCC,QAAAA,aAAa,EAAE;AAAjD,OAAZ;AAAA,8BACI,QAAC,SAAD;AAAW,QAAA,SAAS,EAAE,YAAtB;AAAA,+BACI,QAAC,UAAD;AACI,UAAA,WAAW,EAAE,cADjB;AAEI,UAAA,QAAQ,EAAGC,KAAD,IAAWR,QAAQ,CAACQ,KAAD;AAFjC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI,QAAC,OAAD;AAAS,QAAA,IAAI,EAAEX;AAAf;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CA7BD;;GAAMD,Q;;KAAAA,Q;AA+BN,eAAeA,QAAf","sourcesContent":["// No in browser stuff from design of app\n\nimport { useState, useEffect } from 'react';\nimport CodeEditor from './code-editor';\nimport Preview from './preview';\nimport bundle from '../bundler/index';\nimport Resizable from \"./resizable\";\n\n\nconst CodeCell = () => {\n    const [code, setCode] = useState('');\n    const [input, setInput] = useState('');\n\n\n    useEffect(()=> {\n        const timer = setTimeout(async ()=> {\n            const output = await bundle(input);\n            setCode(output);\n        }, 1000);\n\n        return() => {\n            clearTimeout(timer);\n        };\n    }, [input]);\n\n    return (\n        <Resizable direction={\"vertical\"}>\n            <div style={{height: '100%', display: 'flex', flexDirection: 'row'}}>\n                <Resizable direction={\"horizontal\"}>\n                    <CodeEditor\n                        initalValue={\"const a = 1;\"}\n                        onChange={(value) => setInput(value)}\n                    />\n                </Resizable>\n                <Preview code={code} />\n            </div>\n        </Resizable>\n    );\n};\n\nexport default CodeCell;\n"]},"metadata":{},"sourceType":"module"}