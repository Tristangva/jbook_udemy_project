{"ast":null,"code":"import axios from \"axios\";\nexport const unpkgPathPlugin = () => {\n  return {\n    name: 'unpkg-path-plugin',\n\n    setup(build) {\n      build.onResolve({\n        filter: /.*/\n      }, async args => {\n        console.log('onResolve', args);\n\n        if (args.path === 'index.js') {\n          return {\n            path: args.path,\n            namespace: 'a'\n          };\n        }\n\n        return {\n          namespace: 'a',\n          path: `https://unpkg.com/${args.path}`\n        }; // else if (args.path ==='tiny-test-pkg') {\n        //     return {\n        //         path: 'https://unpkg.com/tiny-test-pkg@1.0.0/index.js',\n        //         namespace: 'a'\n        //     };\n        // }\n      });\n      build.onLoad({\n        filter: /.*/\n      }, async args => {\n        console.log('onLoad', args);\n\n        if (args.path === 'index.js') {\n          return {\n            loader: 'jsx',\n            contents: `\n                          const message = require('medium-test-pkg');\n                          console.log(message);\n                        `\n          };\n        }\n\n        const {\n          data\n        } = await axios.get(args.path);\n        return {\n          loader: 'jsx',\n          contents: data\n        };\n      });\n    }\n\n  };\n};","map":{"version":3,"sources":["/Users/tristanwhite/IdeaProjects/jbook/src/plugins/unpkg-path-plugins.ts"],"names":["axios","unpkgPathPlugin","name","setup","build","onResolve","filter","args","console","log","path","namespace","onLoad","loader","contents","data","get"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM;AACjC,SAAO;AACHC,IAAAA,IAAI,EAAE,mBADH;;AAEHC,IAAAA,KAAK,CAACC,KAAD,EAA6B;AAC9BA,MAAAA,KAAK,CAACC,SAAN,CAAgB;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAhB,EAAkC,MAAOC,IAAP,IAAqB;AACnDC,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,IAAzB;;AACA,YAAIA,IAAI,CAACG,IAAL,KAAc,UAAlB,EAA8B;AAC1B,iBAAO;AAAEA,YAAAA,IAAI,EAAEH,IAAI,CAACG,IAAb;AAAmBC,YAAAA,SAAS,EAAE;AAA9B,WAAP;AACH;;AAED,eAAO;AACHA,UAAAA,SAAS,EAAE,GADR;AAEHD,UAAAA,IAAI,EAAG,qBAAoBH,IAAI,CAACG,IAAK;AAFlC,SAAP,CANmD,CAUnD;AACA;AACA;AACA;AACA;AACA;AACH,OAhBD;AAkBAN,MAAAA,KAAK,CAACQ,MAAN,CAAa;AAAEN,QAAAA,MAAM,EAAE;AAAV,OAAb,EAA+B,MAAOC,IAAP,IAAqB;AAChDC,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,IAAtB;;AAEA,YAAIA,IAAI,CAACG,IAAL,KAAc,UAAlB,EAA8B;AAC1B,iBAAO;AACHG,YAAAA,MAAM,EAAE,KADL;AAEHC,YAAAA,QAAQ,EAAG;AACnC;AACA;AACA;AAL2B,WAAP;AAOH;;AAED,cAAM;AAACC,UAAAA;AAAD,YAAS,MAAMf,KAAK,CAACgB,GAAN,CAAUT,IAAI,CAACG,IAAf,CAArB;AACA,eAAO;AACHG,UAAAA,MAAM,EAAE,KADL;AAEHC,UAAAA,QAAQ,EAAEC;AAFP,SAAP;AAIH,OAlBD;AAmBH;;AAxCE,GAAP;AA0CH,CA3CM","sourcesContent":["import * as esbuild from 'esbuild-wasm';\nimport axios from \"axios\";\n\nexport const unpkgPathPlugin = () => {\n    return {\n        name: 'unpkg-path-plugin',\n        setup(build: esbuild.PluginBuild) {\n            build.onResolve({ filter: /.*/ }, async (args: any) => {\n                console.log('onResolve', args);\n                if (args.path === 'index.js') {\n                    return { path: args.path, namespace: 'a' };\n                }\n\n                return {\n                    namespace: 'a',\n                    path: `https://unpkg.com/${args.path}`\n                }\n                // else if (args.path ==='tiny-test-pkg') {\n                //     return {\n                //         path: 'https://unpkg.com/tiny-test-pkg@1.0.0/index.js',\n                //         namespace: 'a'\n                //     };\n                // }\n            });\n\n            build.onLoad({ filter: /.*/ }, async (args: any) => {\n                console.log('onLoad', args);\n\n                if (args.path === 'index.js') {\n                    return {\n                        loader: 'jsx',\n                        contents: `\n                          const message = require('medium-test-pkg');\n                          console.log(message);\n                        `,\n                    };\n                }\n\n                const {data} = await axios.get(args.path);\n                return {\n                    loader: 'jsx',\n                    contents: data,\n                }\n            });\n        },\n    };\n};\n"]},"metadata":{},"sourceType":"module"}