{"ast":null,"code":"import { ActionType } from '../action-types';\nimport { saveCells } from '../action-creators';\nexport const persistMiddleware = ({\n  dispatch,\n  getState\n}) => {\n  let timer;\n  return next => {\n    return action => {\n      next(action);\n\n      if ([ActionType.MOVE_CELL, ActionType.UPDATE_CELL, ActionType.INSERT_CELL_AFTER, ActionType.DELETE_CELL].includes(action.type)) {\n        if (timer) {\n          clearTimeout(timer);\n        }\n\n        timer = setTimeout(() => {\n          saveCells()(dispatch, getState);\n        }, 250);\n      }\n    };\n  };\n};","map":{"version":3,"sources":["/Users/tristanwhite/Projects/jbook/packages/local-client/src/state/middlewares/persist-middleware.ts"],"names":["ActionType","saveCells","persistMiddleware","dispatch","getState","timer","next","action","MOVE_CELL","UPDATE_CELL","INSERT_CELL_AFTER","DELETE_CELL","includes","type","clearTimeout","setTimeout"],"mappings":"AAEA,SAASA,UAAT,QAA2B,iBAA3B;AACA,SAASC,SAAT,QAA0B,oBAA1B;AAGA,OAAO,MAAMC,iBAAiB,GAAG,CAAC;AACGC,EAAAA,QADH;AAEGC,EAAAA;AAFH,CAAD,KAM3B;AACF,MAAIC,KAAJ;AAEA,SAAQC,IAAD,IAAoC;AACvC,WAAQC,MAAD,IAAoB;AACvBD,MAAAA,IAAI,CAACC,MAAD,CAAJ;;AAEA,UACI,CACIP,UAAU,CAACQ,SADf,EAEIR,UAAU,CAACS,WAFf,EAGIT,UAAU,CAACU,iBAHf,EAIIV,UAAU,CAACW,WAJf,EAKEC,QALF,CAKWL,MAAM,CAACM,IALlB,CADJ,EAOE;AACE,YAAIR,KAAJ,EAAW;AACPS,UAAAA,YAAY,CAACT,KAAD,CAAZ;AACH;;AACDA,QAAAA,KAAK,GAAGU,UAAU,CAAC,MAAM;AACrBd,UAAAA,SAAS,GAAGE,QAAH,EAAaC,QAAb,CAAT;AACH,SAFiB,EAEf,GAFe,CAAlB;AAGH;AACJ,KAlBD;AAmBH,GApBD;AAqBH,CA9BM","sourcesContent":["import { Dispatch } from 'redux';\nimport { Action } from '../actions';\nimport { ActionType } from '../action-types';\nimport { saveCells } from '../action-creators';\nimport { RootState } from '../reducers';\n\nexport const persistMiddleware = ({\n                                     dispatch,\n                                     getState,\n                                 }: {\n    dispatch: Dispatch<Action>;\n    getState: () => RootState;\n}) => {\n    let timer: any;\n\n    return (next: (action: Action) => void) => {\n        return (action: Action) => {\n            next(action);\n\n            if (\n                [\n                    ActionType.MOVE_CELL,\n                    ActionType.UPDATE_CELL,\n                    ActionType.INSERT_CELL_AFTER,\n                    ActionType.DELETE_CELL,\n                ].includes(action.type)\n            ) {\n                if (timer) {\n                    clearTimeout(timer);\n                }\n                timer = setTimeout(() => {\n                    saveCells()(dispatch, getState);\n                }, 250);\n            }\n        };\n    };\n};\n"]},"metadata":{},"sourceType":"module"}