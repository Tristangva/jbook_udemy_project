{"ast":null,"code":"var _jsxFileName = \"/Users/tristanwhite/IdeaProjects/jbook/src/components/cell-list.tsx\";\nimport { usedTypedSelector } from \"../hooks/use-typed-selector\";\nimport CellListItem from \"./cell-list-item\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CellList = () => {\n  let cells = usedTypedSelector(({\n    cells: {\n      order,\n      data\n    }\n  }) => {\n    return order.map(id => {\n      return data[id];\n    });\n  });\n  let renderedCells = cells.map(cell => /*#__PURE__*/_jsxDEV(CellListItem, {\n    cell: cell\n  }, cell.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 43\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: renderedCells\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 11\n  }, this);\n};\n\n_c = CellList;\nexport default CellList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CellList\");","map":{"version":3,"sources":["/Users/tristanwhite/IdeaProjects/jbook/src/components/cell-list.tsx"],"names":["usedTypedSelector","CellListItem","CellList","cells","order","data","map","id","renderedCells","cell"],"mappings":";AAAA,SAAQA,iBAAR,QAAgC,6BAAhC;AACA,OAAOC,YAAP,MAAyB,kBAAzB;;;AAEA,MAAMC,QAAkB,GAAG,MAAM;AAC7B,MAAIC,KAAK,GAAGH,iBAAiB,CAAC,CAAC;AAACG,IAAAA,KAAK,EAAE;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT;AAAR,GAAD,KAA6B;AACvD,WAAOD,KAAK,CAACE,GAAN,CAAWC,EAAD,IAAQ;AACrB,aAAOF,IAAI,CAACE,EAAD,CAAX;AACH,KAFM,CAAP;AAGH,GAJ4B,CAA7B;AAMA,MAAIC,aAAa,GAAGL,KAAK,CAACG,GAAN,CAAUG,IAAI,iBAAI,QAAC,YAAD;AAA4B,IAAA,IAAI,EAAEA;AAAlC,KAAmBA,IAAI,CAACF,EAAxB;AAAA;AAAA;AAAA;AAAA,UAAlB,CAApB;AAEA,sBAAM;AAAA,cAAMC;AAAN;AAAA;AAAA;AAAA;AAAA,UAAN;AACH,CAVD;;KAAMN,Q;AAYN,eAAeA,QAAf","sourcesContent":["import {usedTypedSelector} from \"../hooks/use-typed-selector\";\nimport CellListItem from \"./cell-list-item\";\n\nconst CellList: React.FC = () => {\n    let cells = usedTypedSelector(({cells: { order, data} })=> {\n        return order.map((id) => {\n            return data[id];\n        });\n    });\n\n    let renderedCells = cells.map(cell => <CellListItem key={cell.id} cell={cell} />)\n\n    return<div>{renderedCells}</div>\n};\n\nexport default CellList;\n"]},"metadata":{},"sourceType":"module"}