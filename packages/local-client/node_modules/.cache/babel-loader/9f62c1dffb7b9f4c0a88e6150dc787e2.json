{"ast":null,"code":"import axios from 'axios';\nimport localForage from 'localforage';\nconst fileCache = localForage.createInstance({\n  name: 'filecache'\n});\nexport const fetchPlugin = inputCode => {\n  return {\n    name: 'fetch-plugin',\n\n    setup(build) {\n      build.onLoad({\n        filter: /.*/\n      }, async args => {\n        if (args.path === 'index.js') {\n          return {\n            loader: 'jsx',\n            contents: inputCode\n          };\n        } // const cachedResult = await fileCache.getItem<esbuild.OnLoadResult>(\n        //   args.path\n        // );\n        // if (cachedResult) {\n        //   return cachedResult;\n        // }\n\n\n        const {\n          data,\n          request\n        } = await axios.get(args.path);\n        const fileType = args.path.match(/.css$/) ? 'css' : 'jsx';\n        const contents = fileType === 'css' ? `\n            const style = document.createElement('style');\n            style.innerText = 'body { background-color: \"red\" }';\n            document.head.appendChild(style);\n          ` : data;\n        const result = {\n          loader: 'jsx',\n          contents,\n          resolveDir: new URL('./', request.responseURL).pathname\n        };\n        await fileCache.setItem(args.path, result);\n        return result;\n      });\n    }\n\n  };\n};","map":{"version":3,"sources":["/Users/tristanwhite/IdeaProjects/jbook/src/plugins/fetch-plugin.ts"],"names":["axios","localForage","fileCache","createInstance","name","fetchPlugin","inputCode","setup","build","onLoad","filter","args","path","loader","contents","data","request","get","fileType","match","result","resolveDir","URL","responseURL","pathname","setItem"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAACE,cAAZ,CAA2B;AACzCC,EAAAA,IAAI,EAAE;AADmC,CAA3B,CAAlB;AAIA,OAAO,MAAMC,WAAW,GAAIC,SAAD,IAAuB;AAC9C,SAAO;AACHF,IAAAA,IAAI,EAAE,cADH;;AAEHG,IAAAA,KAAK,CAACC,KAAD,EAA6B;AAC9BA,MAAAA,KAAK,CAACC,MAAN,CAAa;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAb,EAA+B,MAAOC,IAAP,IAAqB;AAChD,YAAIA,IAAI,CAACC,IAAL,KAAc,UAAlB,EAA8B;AAC1B,iBAAO;AACHC,YAAAA,MAAM,EAAE,KADL;AAEHC,YAAAA,QAAQ,EAAER;AAFP,WAAP;AAIH,SAN+C,CAQhD;AACA;AACA;AAEA;AACA;AACA;;;AACA,cAAM;AAAES,UAAAA,IAAF;AAAQC,UAAAA;AAAR,YAAoB,MAAMhB,KAAK,CAACiB,GAAN,CAAUN,IAAI,CAACC,IAAf,CAAhC;AAEA,cAAMM,QAAQ,GAAGP,IAAI,CAACC,IAAL,CAAUO,KAAV,CAAgB,OAAhB,IAA2B,KAA3B,GAAmC,KAApD;AACA,cAAML,QAAQ,GACVI,QAAQ,KAAK,KAAb,GACO;AAC3B;AACA;AACA;AACA,WALoB,GAMMH,IAPV;AASA,cAAMK,MAA4B,GAAG;AACjCP,UAAAA,MAAM,EAAE,KADyB;AAEjCC,UAAAA,QAFiC;AAGjCO,UAAAA,UAAU,EAAE,IAAIC,GAAJ,CAAQ,IAAR,EAAcN,OAAO,CAACO,WAAtB,EAAmCC;AAHd,SAArC;AAKA,cAAMtB,SAAS,CAACuB,OAAV,CAAkBd,IAAI,CAACC,IAAvB,EAA6BQ,MAA7B,CAAN;AAEA,eAAOA,MAAP;AACH,OAnCD;AAoCH;;AAvCE,GAAP;AAyCH,CA1CM","sourcesContent":["import * as esbuild from 'esbuild-wasm';\nimport axios from 'axios';\nimport localForage from 'localforage';\n\nconst fileCache = localForage.createInstance({\n    name: 'filecache',\n});\n\nexport const fetchPlugin = (inputCode: string) => {\n    return {\n        name: 'fetch-plugin',\n        setup(build: esbuild.PluginBuild) {\n            build.onLoad({ filter: /.*/ }, async (args: any) => {\n                if (args.path === 'index.js') {\n                    return {\n                        loader: 'jsx',\n                        contents: inputCode,\n                    };\n                }\n\n                // const cachedResult = await fileCache.getItem<esbuild.OnLoadResult>(\n                //   args.path\n                // );\n\n                // if (cachedResult) {\n                //   return cachedResult;\n                // }\n                const { data, request } = await axios.get(args.path);\n\n                const fileType = args.path.match(/.css$/) ? 'css' : 'jsx';\n                const contents =\n                    fileType === 'css'\n                        ? `\n            const style = document.createElement('style');\n            style.innerText = 'body { background-color: \"red\" }';\n            document.head.appendChild(style);\n          `\n                        : data;\n\n                const result: esbuild.OnLoadResult = {\n                    loader: 'jsx',\n                    contents,\n                    resolveDir: new URL('./', request.responseURL).pathname,\n                };\n                await fileCache.setItem(args.path, result);\n\n                return result;\n            });\n        },\n    };\n};\n"]},"metadata":{},"sourceType":"module"}