{"ast":null,"code":"import'./cell-list-item.css';import CodeCell from'./code-cell';import TextEditor from'./text-editor';import ActionBar from'./action-bar';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CellListItem=function CellListItem(_ref){var cell=_ref.cell;var child;if(cell.type==='code'){child=/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"action-bar-wrapper\",children:/*#__PURE__*/_jsx(ActionBar,{id:cell.id})}),/*#__PURE__*/_jsx(CodeCell,{cell:cell})]});}else{child=/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(TextEditor,{cell:cell}),/*#__PURE__*/_jsx(ActionBar,{id:cell.id})]});}return/*#__PURE__*/_jsx(\"div\",{className:\"cell-list-item\",children:child});};export default CellListItem;","map":{"version":3,"sources":["/Users/tristanwhite/IdeaProjects/jbook/packages/local-client/src/components/cell-list-item.tsx"],"names":["CodeCell","TextEditor","ActionBar","CellListItem","cell","child","type","id"],"mappings":"AAAA,MAAO,sBAAP,CAEA,MAAOA,CAAAA,QAAP,KAAqB,aAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,eAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,cAAtB,C,6IAMA,GAAMC,CAAAA,YAAyC,CAAG,QAA5CA,CAAAA,YAA4C,MAAc,IAAXC,CAAAA,IAAW,MAAXA,IAAW,CAC5D,GAAIC,CAAAA,KAAJ,CACA,GAAID,IAAI,CAACE,IAAL,GAAc,MAAlB,CAA0B,CACtBD,KAAK,cACD,wCACI,YAAK,SAAS,CAAC,oBAAf,uBACI,KAAC,SAAD,EAAW,EAAE,CAAED,IAAI,CAACG,EAApB,EADJ,EADJ,cAII,KAAC,QAAD,EAAU,IAAI,CAAEH,IAAhB,EAJJ,GADJ,CAQH,CATD,IASO,CACHC,KAAK,cACD,wCACI,KAAC,UAAD,EAAY,IAAI,CAAED,IAAlB,EADJ,cAEI,KAAC,SAAD,EAAW,EAAE,CAAEA,IAAI,CAACG,EAApB,EAFJ,GADJ,CAMH,CAED,mBAAO,YAAK,SAAS,CAAC,gBAAf,UAAiCF,KAAjC,EAAP,CACH,CArBD,CAuBA,cAAeF,CAAAA,YAAf","sourcesContent":["import './cell-list-item.css';\nimport { Cell } from '../state';\nimport CodeCell from './code-cell';\nimport TextEditor from './text-editor';\nimport ActionBar from './action-bar';\n\ninterface CellListItemProps {\n    cell: Cell;\n}\n\nconst CellListItem: React.FC<CellListItemProps> = ({ cell }) => {\n    let child: JSX.Element;\n    if (cell.type === 'code') {\n        child = (\n            <>\n                <div className=\"action-bar-wrapper\">\n                    <ActionBar id={cell.id} />\n                </div>\n                <CodeCell cell={cell} />\n            </>\n        );\n    } else {\n        child = (\n            <>\n                <TextEditor cell={cell} />\n                <ActionBar id={cell.id} />\n            </>\n        );\n    }\n\n    return <div className=\"cell-list-item\">{child}</div>;\n};\n\nexport default CellListItem;\n"]},"metadata":{},"sourceType":"module"}