{"ast":null,"code":"var _jsxFileName = \"/Users/tristanwhite/IdeaProjects/jbook/src/components/preview.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst html = `\n    <html>\n      <head></head>\n      <body>\n        <div id=\"root\"></div>\n        <script>\n          window.addEventListener('message', (event) => {\n              <!-- Error catch -->\n              try{\n                   eval(event.data);\n              }catch (err) {\n                  const root = document.querySelector('#root');\n                  root.innerHTML = '<div style=\"color: red;\"><h4>Runtime Error</h4>' + err + '</div>';\n                  throw err; <!-- Check error optional-->\n              }\n          }, false);\n        </script>\n      </body>\n    </html>\n  `;\n\nconst Preview = ({\n  code\n}) => {\n  _s();\n\n  const iframe = useRef();\n  useEffect(() => {\n    iframe.current.srcdoc = html;\n    iframe.current.contentWindow.postMessage(code, '*');\n  }, [code]);\n  return /*#__PURE__*/_jsxDEV(\"iframe\", {\n    title: \"preview\",\n    ref: iframe,\n    sandbox: \"allow-scripts\",\n    srcDoc: html\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Preview, \"GAFleWBZ6O+8Op7dBuDH6PzOglQ=\");\n\n_c = Preview;\nexport default Preview;\n\nvar _c;\n\n$RefreshReg$(_c, \"Preview\");","map":{"version":3,"sources":["/Users/tristanwhite/IdeaProjects/jbook/src/components/preview.tsx"],"names":["React","useEffect","useRef","html","Preview","code","iframe","current","srcdoc","contentWindow","postMessage"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,MAAnB,QAAgC,OAAhC;;AAMA,MAAMC,IAAI,GAAI;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAnBA;;AAqBA,MAAMC,OAA+B,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAAA;;AAChD,QAAMC,MAAM,GAAGJ,MAAM,EAArB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,MAAM,CAACC,OAAP,CAAeC,MAAf,GAAwBL,IAAxB;AACAG,IAAAA,MAAM,CAACC,OAAP,CAAeE,aAAf,CAA6BC,WAA7B,CAAyCL,IAAzC,EAA+C,GAA/C;AACH,GAHQ,EAGN,CAACA,IAAD,CAHM,CAAT;AAKA,sBAAO;AAAQ,IAAA,KAAK,EAAE,SAAf;AAA0B,IAAA,GAAG,EAAEC,MAA/B;AAAuC,IAAA,OAAO,EAAC,eAA/C;AAA+D,IAAA,MAAM,EAAEH;AAAvE;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CATD;;GAAMC,O;;KAAAA,O;AAWN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\nimport {useEffect, useRef} from \"react\";\n\ninterface PreviewProps{\n    code: string;\n}\n\nconst html = `\n    <html>\n      <head></head>\n      <body>\n        <div id=\"root\"></div>\n        <script>\n          window.addEventListener('message', (event) => {\n              <!-- Error catch -->\n              try{\n                   eval(event.data);\n              }catch (err) {\n                  const root = document.querySelector('#root');\n                  root.innerHTML = '<div style=\"color: red;\"><h4>Runtime Error</h4>' + err + '</div>';\n                  throw err; <!-- Check error optional-->\n              }\n          }, false);\n        </script>\n      </body>\n    </html>\n  `;\n\nconst Preview: React.FC<PreviewProps> = ({code}) => {\n    const iframe = useRef<any>();\n\n    useEffect(() => {\n        iframe.current.srcdoc = html;\n        iframe.current.contentWindow.postMessage(code, '*');\n    }, [code]);\n\n    return <iframe title={\"preview\"} ref={iframe} sandbox=\"allow-scripts\" srcDoc={html} />;\n};\n\nexport default Preview;\n"]},"metadata":{},"sourceType":"module"}